#!/bin/tcsh
# find maximum or minimum level in bands file

set mode=1 nl=0 n=0

while (`echo $1 | sed -e 's/\(.\).*/\1/' `  ==  "-")
  set arg1 = $1; shift

  switch ($arg1)

    case "-nl=*":
      set nl=`echo $arg1 | sed s/-nl=//`
      breaksw

    case "-n=*":
      set n=`echo $arg1 | sed s/-n=//`
      breaksw

    case "-k=*":
      set k=`echo $arg1 | sed s/-k=//`
      breaksw

    case "-mode=*":
      set mode=`echo $arg1 | sed s/-mode=//`
      breaksw

    case "--debug":
      set debug
      breaksw

    case "--help":
    case "--h":
      goto usage

    default:
      echo unrecognized switch $arg1
      goto usage
  endsw
end

if ($#argv != 1) goto usage
if (! -e $argv[1]) then
  echo "$0 : missing file '$argv[1]'"
  shift
  goto usage
endif

if ("$n" == 0 && $?k == 0) then
  echo "$0 : no band number specified (-n=#) or k-point specified (-k=#,#,#)"
  shift
  goto usage
endif
  
if ("$mode" == 1) then
  set nl = `head -1 $1 | awk '{print $1}'`
endif

if ("$nl" == 0) then
  echo "$0 : number of levels not specified (-nl=#)"
  shift
  goto usage
endif
  
# standard band mode
if ("$mode" == "1") then
  @ xx =  $nl / 10
# echo $xx
  @ yy =  $xx * 10
# echo $yy
  if ("$yy" != "$nl") @ xx =  $xx + 1
  set nl = $xx
# echo $nl

#   cat $1 | awk -vnl=$nl -vn=$n \
#  'BEGIN {getline; min=999; max=-999} {nline=$1;   print "line has",nline,"points";   il=0; while (il++ < nline) {getline; print "il=",il,$0;i=0 ; s=" "; while (i++ < nl) {getline; s = (s $0); print "now at",i,$0 }; ; split(s,a); print a[1],a[n]}; print "done this line",$0 }'

  if ($?debug) then
  cat $1 | awk -vnl=$nl -vn=$n \
'BEGIN {getline; min=999; max=-999} {nline=$1; print "line has",nline,"points";   il=0; while (il++ < nline) {getline; i=0 ; s=" "; while (i++ < nl) {getline; s = (s $0); }; split(s,a);  printf("il=%i  e(%i) = "),il,n;print a[n]; if (max<a[n]) max=a[n]; {if (min>a[n]) min=a[n]}}; print "min,max=",min,max}'
  else
  cat $1 | awk -vnl=$nl -vn=$n \
'BEGIN {getline; min=999; max=-999} {nline=$1; il=0; while (il++ < nline) {getline; i=0 ; s=" "; while (i++ < nl) {getline; s = (s $0); }; split(s,a); if (max<a[n]) max=a[n]; if (min>a[n]) min=a[n]}; } END {print min,max}'
  endif

else if ("$mode" == "-1" && $?k != 0) then
 cat $1 | awk -vnl=$nl -vn=$n -vmin=999 -vmax=-999 \
 'BEGIN {split(k,kk)} {if ($1 == "SECMAT:" && kk[1] == $7 && kk[2] == $8 && kk[3] == $9) {print;i=0 ; s=" "; while (i++ < nl) {getline; s = (s $0); print}; exit;}  }'

else if ("$mode" == "-1" && $n != 0) then
  if ($?debug) then
  cat $1 | awk -vnl=$nl -vn=$n -vmin=999 -vmax=-999 '{while ($1 != "SECMAT:") {print "skipping line",$1; if (getline == 0) exit} {i=0 ; s=" "; while (i++ < nl) {getline; s = (s $0);}; split(s,a)};    print "bands",s; {if (min>a[n]) min=a[n]}; {if (max<a[n]) max=a[n]}}; END {print "min,max=",min,max}'
  else
  cat $1 | awk -vnl=$nl -vn=$n -vmin=999 -vmax=-999 '{while ($1 != "SECMAT:") {if (getline == 0) exit} {i=0 ; s=" "; while (i++ < nl) {getline; s = (s $0);}; split(s,a)}; {if (min>a[n]) min=a[n]}; {if (max<a[n]) max=a[n]}}; END {print min,max}'
endif

endif

exit
usage:
echo 'usage : extract-level-from-bands-file [-switches] -n=# file-name'
echo '        switches:'
echo '          --help'
echo '          --h'
echo '            show this message'
echo ' '
echo '          --debug'
echo '            print debugging information'
echo ' '
echo '          -mode=# specifies file structure'
echo '          -mode=1 standard bnds file format (default)'
echo '          -mode=-1 output generated by lm or lmf'
echo ' '
echo '          -nl=#'
echo '            number of lines in file per k-point.'
echo '            Required for mode=-1'
echo '            Ignored for mode=1'
echo ' '
echo '          You must choose one of:'
echo '          -n=# extract min and max value of level n'
echo '          -k=#1,#2,#3 levels from this kp'
echo ' '

