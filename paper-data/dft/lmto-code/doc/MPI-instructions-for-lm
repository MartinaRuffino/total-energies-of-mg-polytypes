This file documents compilation of the MPI version of the ASA main program, lm-MPIK.

1. Create an MPI version of slatsm.a
   (See slatsm/startup/MPI-instructions in the slatsm directory)

2. Set an environment variable F90M to point to
   an appropriate MPI-f90 compiler, followed by switches, e.g. in csh:
   setenv F90M 'ifc -I/mpich-1.2.5_shared/include -cm -O3 -xW -ip'
   and also have preprocessor ccomp in your path, or
   environment variable CCOMP pointing to ccomp.
   Also, set these variables in Make.inc:   F90M, LIBSLA_MPI, LIBES_MPI

3. Create MPI-specific libraries subs.a in directories subs/
   In directory subs, invoke 
      ../startup/subs-to-mpi      (used by lmf-MPI only)
      ../startup/subs-to-mpik     (used by lmf-MPIK and lm-MPIK)
   (Similarly for directories nc/ and fp/, if installed)

4. Create file lm-MPIK.f using:
   ccomp -dMPIK lm.f lm-MPIK.f
   Note: the ASA program lm still needs to read some files (structure
   constants) specific to each process.  That means the structure
   constant must be available to each process.
   By default these files are written to and read from the current 
   working directory.  You MAY elect to set the directory
   for these files specific to each processor.
   To do that, uncomment appropriate lines near the bottom of lm-MPIK.f
   In the following, the strux files are read from directory /home/tmp.
   /home/tmp may be different for each process.
C ... Set customization of temporary directory here, if desired
C     This is usual default (current working directory)
      tmpdir = ' '
C     call gtenv('HOME',tmpdir)
C     call gtenv('TMPDIR',tmpdir)
C     call getenv('HOME',tmpdir)
C     call getenv('TMPDIR',tmpdir)
      tmpdir = '/home/tmp/'

5.  Uncommment the rules to make lm-MPIK in Makefile, top-level directory
    are appropriate for your installation)

6.  Make lm-MPIK.o using: 
    $F90M -c lm-MPIK.f

7.  Make lm-MPIK executable using: 
    make -f Makefile lm-MPIK

Execution of ASA lm-MPIK:

As is usual with MPI, create a file (.e.g mfile) with a list of processors
and number of processes, e.g. the contents of 'mfile' for 4 processes,
2 processes each on 2 nodes:

node3:2
node4:2

Invoke mpirun as, e.g.
 mpirun -machinefile mfile -np 4 -nolocal $HOME/bin/lm-MPIK arguments-to-lm
