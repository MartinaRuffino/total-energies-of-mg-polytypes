#!/bin/csh -f

# This shell script returns a list of routines that must be compiled with
# switches weaker than the standard FFLAGS
# It uses some or all of the following variables to specify the architecture:
#   machine-configuration is the standard GNU format in 'config.sub':
#       CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM
#   machine-mnemonic is the machine mnemonic identified by 'Makemakefile'

if ($#argv != 2) then
  echo usage:  SPECIAL-FLAGS   machine-configuration  machine-mnemonic
  exit -1
endif

set host = $1
set mnemonic = $2

# Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).
# This is taken from config.sub
set maybe_os = `echo $host | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\2/'`
switch ($maybe_os)
  case "linux-gnu*":
    set os = $maybe_os
    set basic_machine = `echo $host | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`
    breaksw
  default:
    set basic_machine = `echo $host | sed 's/-[^-]*$//'`
    if ( $basic_machine != $maybe_os) then
      set os = `echo $host | sed 's/.*-//'`
    else
      set os
    endif
endsw

# echo $basic_machine $os

# --- Special compilation, FFLAGS_NO ---
unset lst
#   if ($mnemonic == LINUXF) set lst = (bndfp)
if ($?lst > 0) then
  echo '$(FC) $(FFLAGS_NONE) ::' $lst
endif

# --- Special compilation, FFLAGS_LESS3 ---
unset lst
# if ($basic_machine =~ alphaev6* && $os =~ osf*) set lst = ropyln
# if ($basic_machine =~ alpha-* && $os =~ osf*) set lst = atomsr
if ($?lst > 0) then
  echo '$(FC) $(FFLAGS_LESS3) ::' $lst
endif

# --- Special compilation, FFLAGS_LESS2 ---
unset lst
# if ($os =~ aix*) set lst = (rdccat-msm)
  if ($os =~ hpux*) set lst = (suphas)
# if ($basic_machine =~ mips-sgi) set lst = (npr2tb)
  if ($mnemonic == LINUXF) set lst = (augmat lmfp)
# This applies to Intel version 15
  if ($mnemonic == INTEL_IFORT) set lst = (rhopos)
# For generic compiler include them all
# This applies to Intel version 11
  if ($mnemonic == INTEL_IFORT) then
    if (`ifort -v |& awk '{printf "%d", $(NF)}'` < 15) then
      set lst = (dfrce smshft rhopos)
    endif
  endif
  if ($basic_machine =~ i686-pc & $mnemonic == INTEL_IFORT) set lst = (bndfp)
#    if ($mnemonic == INTEL_IFORT) set lst = (dfrce)
if ($?lst > 0) then
  echo '$(FC) $(FFLAGS_LESS2) ::' $lst
endif

# --- Special compilation, FFLAGS_LESS ---
unset lst
  if ($mnemonic == OSXI) set lst = (hhibl sugws)
  if ($mnemonic == INTEL_IFC) set lst = (hklos)
# This applies to Intel version 11
# if ($mnemonic == INTEL_IFORT) set lst = (rhogkl)
# This applies to Intel version 15
  if ($mnemonic == INTEL_IFORT) echo >/dev/null
# For generic compiler include them all
  if ($mnemonic == INTEL_IFORT) set lst = (rhogkl)

  if ($os =~ aix*) set lst = (gaugm)
  if ($os =~ hpux*) set lst = (mixrho)
# if ($basic_machine =~ sparc*) set lst = (spcgrp)
# if ($basic_machine =~ mips-sgi*) then
#   set lst = (iostr makidx prtbas shoshl)
#   set compiler_version = `f77 -64 -version | & awk '{print substr($4,1,3)}'`
#   if ("$compiler_version" == 6.1) set lst = (rdccat ropyln)
#   if ("$compiler_version" == 6.2) set lst = (rdccat)
# endif
if ($?lst > 0) then
  echo '$(FC) $(FFLAGS_LESS) ::' $lst
endif

# --- Special compilation, FFLAGS_MORE ---
unset lst
  if ($mnemonic == LINUXF) set lst = (hsibl hsibq rsibl)
#    if ($mnemonic == LINUXF) set lst = (rsibl)
# if ($os =~ aix*) set lst = ()
# if ($os =~ hpux*) set lst = ()
# if ($basic_machine =~ sparc*) set lst = ()
# if ($basic_machine =~ mips-sgi*) then
#   set lst = (iostr makidx prtbas shoshl)
#   set compiler_version = `f77 -64 -version | & awk '{print substr($4,1,3)}'`
#   if ("$compiler_version" == 6.1) set lst = ()
#   if ("$compiler_version" == 6.2) set lst = ()
# endif
if ($?lst > 0) then
  echo '$(FC) $(FFLAGS_MORE) ::' $lst
endif

# --- Other special compilations  ---
# unset lst
# if ($basic_machine =~ *cray*) then
#   if (`uname -m | awk '{print $2}'` == J90) set lst = rdccat
#   if ($?lst > 0) then
#      echo '$(FC) -dp -eRv -Oscalar1,vector1,task0' :: $lst
#   endif
# endif
