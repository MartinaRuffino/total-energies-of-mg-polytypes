      subroutine supghz(s_ctrl,s_site,s_ham,s_pot,s_spec,vRLshf,vshft,
     .  isp,zp,noneq)
C- Set up potential for layer Green's function
C ----------------------------------------------------------------------
Cio Structures
Cio  s_ctrl :struct for program flow parameters; see structures.h
Ci     Elts read:  lham lrel nl nbasp nspin lasa ldlm nbas nclass nspec
Co     Stored:     lham
Co     Allocated:  *
Cio    Elts passed:*
Cio    Passed to:  suhamz mkpotf makpfz mkpotfd
Cio  s_site :struct for site-specific data; see structures.h
Ci     Elts read:  class dlmcl pnu spec clabel v0 ncomp
Co     Stored:     *
Co     Allocated:  *
Cio    Elts passed:*
Cio    Passed to:  suhamz mkpotf makpfz mkpotfd
Cio  s_ham  :struct for parameters defining hamiltonian; see structures.h
Ci     Elts read:  ldham hord nlibu udiag
Co     Stored:     *
Co     Allocated:  *
Cio    Elts passed:iprmb
Cio    Passed to:  suhamz mkpotf makpfz mkpotfd
Cio  s_pot  :struct for information about the potential; see structures.h
Ci     Elts read:  vmtz ves
Co     Stored:     *
Co     Allocated:  cp pf dpf ddpf dddpf pfr dpfr ddpfr gmar papg palp
Co                 gma
Cio    Elts passed: gma palp pf dpf ddpf dddpf pp pprel pfr ddpfr dpfr
Cio                papg gmar sop
Cio    Passed to:  suhamz mkpotf makpfz mkpotfd
Cio  s_spec :struct for species-specific data; see structures.h
Ci     Elts read:  a nr z rmt lmxa hcr
Co     Stored:     *
Co     Allocated:  *
Cio    Elts passed:*
Cio    Passed to:  suhamz mkpotf makpfz mkpotfd
Ci Inputs
Ci   isp   :current spin channel (1 or 2)
Ci   zp    :complex energy
Ci   noneq :true if point is nonequilibrium point
Cr Remarks
Cr   This routine sets up potential parameters needed to
Cr   create the hamiltonian for some layers in the PGF
Cl Local variables
Cl   lham1 :local copy of lham, stripped of switch to set gamma repsn
Cl         :when evaluating nonequil point
Cu Updates
Cu   10 Nov 11 Begin migration to f90 structures
Cu   20 Nov 07 Additions for LDA+U implementation
Cu   11 Jan 04 (S.Faleev) alpha representation for iz>nzp
Cu             Argument list changed for non-equilibrium mode
Cu   10 Jan 02 supghz is simplified: makes pp for all sites.
Cu             Now just a front end to suhamz, except that for spin2
Cu             case, copies spin2 pot. fun. to spin1 channel.
Cu   21 Dec 01 Potential functions generated by new mkpotf.f
C ----------------------------------------------------------------------
      use structures
      implicit none
C ... Passed parameters
      integer isp,noneq
      double precision vRLshf(*),vshft(*),zp(2)
C ... For structures
!      include 'structures.h'
      type(str_ctrl)::  s_ctrl
      type(str_site)::  s_site(*)
      type(str_ham)::   s_ham
      type(str_pot)::   s_pot
      type(str_spec)::  s_spec(*)
C ... Local parameters
      logical bittst
      integer i,ldham(16),ldim,lidim,lihdim,lham
      procedure(integer) :: bitand
      integer, parameter :: LGAM=128
      double precision zpl(2)
      equivalence (ldim,ldham(1)),(lidim,ldham(2)),(lihdim,ldham(3))

C ... alpha repsn for non-equilibrium points iz > nzp
      lham = s_ctrl%lham
      if (mod(noneq,2) /= 0) s_ctrl%lham = lham-bitand(lham,LGAM)

C ... Im z = 0 for noneq points
      zpl(1:2) = zp(1:2)
      if (noneq >= 2) zpl(2) = 0

      call info5(45,0,0,
     .  ' supghz: Make P for isp=%i z=(%s,%2;4g)%?#(n)# (noneq)##',isp,zpl,noneq,4,5)

C --- Make potential functions for all sites ---
C     This assumes that pf(spin2) made at same time as pot(spin1)
      if (isp == 1) call suhamz(s_ctrl,s_site,s_ham,s_pot,s_spec,vRLshf,vshft,zpl)

C --- Copy pf to isp=1 column for isp=2 ---
      if (isp == 2) then
        ldham = s_ham%ldham
        i = lihdim*2            ! multiply by 2 for complex arithmetic
C       Transform to gamma representation
        if (bittst(s_ctrl%lham,128)) then
          call dpscop(s_pot%gma,s_pot%gma,lihdim,1+lihdim,1,1d0)
        endif
        call dpscop(s_pot%palp,s_pot%palp,i,1+i,1,1d0)
        call dpscop(s_pot%pf,s_pot%pf,i,1+i,1,1d0)
        call dpscop(s_pot%dpf,s_pot%dpf,i,1+i,1,1d0)
        call dpscop(s_pot%ddpf,s_pot%ddpf,i,1+i,1,1d0)
        call dpscop(s_pot%dddpf,s_pot%dddpf,i,1+i,1,1d0)
      endif
      s_ctrl%lham = lham

C     call zprm('pf',2,s_pot%pf,lihdim,lihdim,nsp)
      return

C      entry clpgv(spot)
C      call clhamz(opfl)
Cc     lalloc = 0
      end
