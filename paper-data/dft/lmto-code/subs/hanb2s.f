      subroutine hanb2s(job,nds,nbas,nkap,ntab,iax,alpha,halp,s,b)
C- Convert structure matrix to/from one-center expansion coefficients
C ----------------------------------------------------------------------
Ci Inputs
Ci   job   :1s digit
Ci         :  0 convert b to s
Ci         :  1 convert s to b
Ci         :  2 convert s to s
Ci         :10s digit
Ci         :  0 Input has halp=1
Ci         :  1 Input scaled by halp
Ci         :100 digit
Ci         :  0 Output has halp=1
Ci         :  1 Output scaled by halp
Ci         :1000 digit
Ci         :  0 b is true b
Ci         :  1 b is negative of true b (old OKA convention)
Ci         :  Note: this switch is NOT IMPLEMENTED yet
Ci   nds   :leading dimensions of s and b
Ci   nbas  :size of basis
Ci   nkap  :number of energies for which strux are calculated
Ci   alpha :tight-binding screening parameters generated by hcr
Ci   halp  :inverse of head value functions;see makalp io=2
Cio Inputs/Outputs
Cio  s     :real-space structure matrix
Cio  b     :real-space expansion coefficients
Cl Local variables
Cl         :
Cr Remarks
Cr
Cu Updates
Cu   23 Jul 08 (S Lozovoi) Adapted to species-dependent lmax
Cu   02 Aug 06 First created
C ----------------------------------------------------------------------
      implicit none
C ... Passed parameters
      integer job,nds,nbas,nkap,niax
      parameter (niax=10)
      integer iax(niax,1),ntab(nbas+1)
      double precision
     .  alpha(nds,nbas,nkap,nkap),halp(nds,nbas,nkap,nkap),
     .  b(nds,nds,nkap,nkap,1),s(nds,nds,nkap,nkap,1)
C ... Local parameters
      integer job0,job1,job2,ib,is1,is2,is,nlmb,nlma,nlb,nds2,ilmb,ilma,
     .  ia
C     double precision hin(nds,nkap,nkap),hout(nds,nkap,nkap)
      double precision wk(2,2)

      job0 = mod(job,10)
      job1 = mod(job/10,10)
      job2 = mod(job/100,10)
      call sanrg(.true.,job0,0,2,'hanb2s:','1s digit job')
      call sanrg(.true.,job1,0,1,'hanb2s:','10s digit job')
      call sanrg(.true.,job2,0,1,'hanb2s:','100s digit job')
C     Turn job1 into :
C     -1 scale by halp^-1;  0 do not scale; 1 scale by halp
      if (job1 == job2) then
        job1 = 0
      elseif (job1 == 0 .and. job2 == 1) then
        job1 = 1
      elseif (job1 == 1 .and. job2 == 0) then
        job1 = -1
        call rx('hanb2s not ready')
      endif

      nlb = nds*nbas
      nds2 = nds**2

C ... Need inverse alpha to make s from b
      if (job0 == 1) then
        call invalp(nlb,nkap,alpha)
C ... Put -alpha into alpha
      elseif (job0 == 0) then
        call dscal(nlb*nkap**2,-1d0,alpha,1)
      endif

      do  ib = 1, nbas

      is1 = ntab(ib)+1
      is2 = ntab(ib+1)
C     Until there is a distinction, use iax(9)
      nlmb = iax(9,is1)
      do  is = is1, is2
C     Scale only inequivalent strux
      if (is == iax(8,is)) then

        nlma = iax(9,is)
        ia   = iax(2,is)

        do  ilmb = 1, nlmb
        do  ilma = 1, nlma

        if (job0 == 0) then

          if (nkap == 1) then
C         -alpha * b
            wk(1,1) = alpha(ilma,ia,1,1)*b(ilma,ilmb,1,1,is)
C         1 - alpha * b
          if (is == is1 .and. ilma == ilmb) then
            wk(1,1) = wk(1,1) + 1
          endif
          s(ilma,ilmb,1,1,is) = wk(1,1)

          elseif (nkap == 2) then

C         -alpha * b
          call dmx22(alpha(ilma,ia,1,1),nlb*2,nlb,
     .               b(ilma,ilmb,1,1,is),nds2*2,nds2,
     .               wk(1,1),2,1)
C         1 - alpha * b
          if (is == is1 .and. ilma == ilmb) then
            wk(1,1) = wk(1,1) + 1
            wk(2,2) = wk(2,2) + 1
          endif
          s(ilma,ilmb,1,1,is) = wk(1,1)
          s(ilma,ilmb,1,2,is) = wk(1,2)
          s(ilma,ilmb,2,1,is) = wk(2,1)
          s(ilma,ilmb,2,2,is) = wk(2,2)

          endif

        elseif (job0 == 1) then
          call rx('hanb2s not ready for job 1')

        endif

C   ... Scale s by halp
        if (job1 == 1) then

        if (nkap == 1) then
          wk(1,1) = s(ilma,ilmb,1,1,is)*halp(ilmb,ib,1,1)
          s(ilma,ilmb,1,1,is) = wk(1,1)
        elseif (nkap == 2) then
          call dmx22(s(ilma,ilmb,1,1,is),nds2*2,nds2,
     .               halp(ilmb,ib,1,1),nlb*2,nlb,
     .               wk(1,1),2,1)
          s(ilma,ilmb,1,1,is) = wk(1,1)
          s(ilma,ilmb,1,2,is) = wk(1,2)
          s(ilma,ilmb,2,1,is) = wk(2,1)
          s(ilma,ilmb,2,2,is) = wk(2,2)
        endif
        endif

        enddo
        enddo

      endif
      enddo
      enddo

C ... Restore alpha if modified
      if (job0 == 1) then
        call invalp(nds*nbas,nkap,alpha)
      elseif (job0 == 0) then
        call dscal(nlb*nkap**2,-1d0,alpha,1)
      endif

      end
