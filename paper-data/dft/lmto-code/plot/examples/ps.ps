%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 73 190 540 643
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: psfrag.dvi
%%BoundingBox: -211 189 541 644
%%DocumentFonts: Times-Roman
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -f psfrag.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2009.03.03:1627
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "22 June 1996",
%   filename = "8r.enc",
%   email = "kb@@mail.tug.org",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "119     662    4424",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258437 52099154 1000 600 600 (psfrag.dvi)
@start
%DVIPSBitmapFont: Fa lcmssi8 41.28 3
/Fa 3 111 df[<A1923807FF80A1031F13E0A1037F13F8A192B512FCA15CA117FEA14A14
FFA3A15CA4A15CA3A117FEA2A15CA3A117FCA15CA3A117F8A2A15CA3A117F0A2A191B6FC
A3A117E0A2A15BA3A117C0A15BA3A11780A2A15BA3A11700A2A15BA3A15EA15B0B03B5FC
9AB612F80A0FDBFF806099B812E0090705F85D093F17FE98BA7E080307E05F080F19F808
7F735C4FBB7E4F747E070F755E073F7590B6FC96BD7E4E880607765E4E88063F654E1CFF
95BF128105030CC15D4DF100074D0680D9003F14E34D05F8C8000714F3057F0580150194
B800FCCA6C01FB5D4C05E0834C94CB000F90B7FC4C04FC844C04F0844C04C07294C7FC4C
93CDFC4C4B8693B700F8864B4C664B04C0864B4C864FCEFC4B4B874B4B674B4B874B15C0
4F8792B7CFFC4A4B684A4B88604A5D4A4B68A24A4B644A5D95D0FC4A4A6991B6FC4D6549
5DA2494B695F49695F495DA15D4992D15AA2495CA192C8FC495C6B90B65AA24C695A6B48
5DA24C69486AA25E48A15BA293D2B6FCA25A4B6AA24869A25DA15C6A5AA24B6AA26AA2B6
FCA15C5D6AA3A191C9FCA26AA3A15B6A5DA2A15BA26A81A2A15BA29FB6FCA3A15B6981A2
6C565DA26981696C565D6F65A2696C6E9AB7FC565E70637E7063686C6F5193CAFC706368
6C6F98B8FC70505E6C6F62701A0F6C706171616D6F4F5E714EB8FC6D6F6005FE180F6D6F
6C053F806D704D01FE5D06F00403B548B6FC6D04FE040F5C6DDCFFC0037F5C07FC0203B6
485D6DDDFFE090B75A6D95B912816E1D016E1CFE6E0AFC5E6E1CF06E525A6E1CC06E1C00
6E515F6F62031F08F07F6F08C05F0303626F4FC892CBFC6F6C06F881041F06E06F5B0407
06806F13F8040105FCC9000313E0DC003F04F093CEFC05071680050003F8D3FC060349D4
FC>192 242 93 365 214 100 D[<53B512E00B7FECFF800A0FB712F80A7F16FF0903B9
12E0091F18FC98BBFC08031AC0080F1AF0083F8697BC12FE0703757E070F88073F884F88
4EBE12FC0607894E89183F4E8A95C07E05038B4DDEC001834D05F0C712074D94C96C8105
7F04F8040F8194B800E016034C05800400814C04FCCB123F4C04F072804C4C844C048072
15804C4BCC7E4C4B070015C093B712F04B4C7414E050864B93CE7E4B4B1EF04B4B874B5D
4B4B7514F8614B4B8792B75A4A4BCF15FC8F4A5D4A5D4A5D4E1FFE4A4B884A5D95D1FC4A
5CA291B65A495DA2494B8A5F5B5F495DA24992D2FCA2494A9CB5FC5EA2495CA290B65AA2
5E5A5E485814FCA25E5A93D2FC93C3FC5AA114F8A35AA2A114F0A25AA114E0A2A114C0A2
48A11380A1EBFE00A113F803F0D6FC5DA3B6FCA65DA881A47EA481A37EA281A27EA281A2
6C80A36C80A270F603C06C6FF60FF0231F6C6F547E23FF70656C6F65220F6D6E1D3F7065
6D6E52B55A711B076D6F636D6F1B3F05F898B6FC6D6F1A036D6F1A1F711A7F6D04C00603
B75A6D04F0181F6E03FC95B8FC6E03FF05075F07E0047F5F6E04FE030FB848C8FC6EDCFF
F00107B95A6E94BC12F06E686E20806E9DC9FC6F1EFC6F1EF0030F1EC06F666F53CAFC03
001DF8043F1CE0701C80040709FCCBFC04011BF0706C1A80051F4FCCFC050719F0050019
80061F05F8CDFC06031780DE003F03F0CEFCDF007F01F0CFFC>167
188 95 311 190 I[<9D383FFFFE0D0FB612F89CB812C00C0717F8DD7FF8053F17FE9326
01FFFE94BA7E04076D6C030319E04C6E030F19F873033F19FE4C95BCFC4C6E0203870A0F
870A3F874C6E4A8751BD7E51884F49881B1F93B64A886398BF1280F1E00350DC000118C0
4B4C03C0EB0003504AC9003F16E05002F0160F4F480280040116F097B548CBFC4B03C102
F8183F07C302E08407C702807215F8078791CC7E4B038F13FC079F498507BF5B4F01C085
634B92B5CDFC50866262624B5E62508797CFFC4B5DA2614F99B6FC615D4F1FF061A26192
B7CF5AA24E20E0A2604A6860A24E20C04A68A260A11580A24A4B64A34E2000A24A68A295
D0FCA15C4A68A34D68A24A68A34D68A24A9DB6FCA34D6891B665A34D68A24968A34D68A2
4968A34D68A24968A34D9DC7FC4968A394D05DA24968A34C68A24968A34C68499DB6FCA3
4C68A290B665A34C68A24868A34C68A24868A34C684868A34C9DC8FCA24868A393D05DA2
4868A34B684868A34B68A2489DB6FCA34B68A2B665A34B68A26C8B4B68A26C4A775C6C8C
6C4A7791C9FC6C49D16C13FCC601F80C0113F0>173 182 93 309
214 110 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi8 28.66 1
/Fb 1 121 df<DDFFF8933803FF800407D9FF80031F13F8043F02E092B6FC93B600F84A
15C0030303FE020715F0030F6F6C011F81033F7049814BD9803F6D4948C67F9227FFFC00
076DD9FFF0EB0FFF4A01E06D6D4801C001031380020701806D6D4890C7FC4A90C86D4848
020F13C0DA1FFC037F4948143F4A48DB3FFF494A13E04A48DD9FF091B5FC03C0DDBFE05B
4A486FD9FFC05B4990C9FC49484F5B13074A96C7FC49486049485114C0A24948604A7514
80017F1F004A4E6E5B01FF6691CA48705B516E5B48F63F80499AC8FC610003625BA296B5
FC6C4861CCFCA26063A36098CCFCA36062A36062A36062A36062A36062F701F0557E95B5
4D7EA2505FA24D190FD93F8065D9FFE05F00036D1C1F486D4A62486D1C3F4867486D1C7F
4D91CA485A5A4D4E90C7FC545AA2B5484A4E5A4D6E4B5A1E1F4A4A4E5A4ADAFFBF4D5A6C
4949019F6D4B5A4A030F4C5B4AD903FE6E020790C8FC6C90C7260FFC074C5A01F84A486C
6DEC3FFC6C6C4A486C6DECFFF801FF9126FFE00001FE01035B6CD9F0074990277FFFC03F
13C06C90B6486D90B65A6C93C76C4BC9FCC64B02075D6D02F86E15F0011F02E0020015C0
01030280031F49CAFC9026003FFCC9000113E07B6A79E78E>120
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi8 34.4 1
/Fc 1 66 df[<A1EA07F0A1EA0FFCA1123FA17FA1127FA112FFA26B6BA17F6B6BA26BA2
6B6BA180A0B6FC6AA26AA26A6AA1806A6AA26AA29FB7FC69A1806969A2575A6A0F1F7FF9
3FF810F081217FF9FFE0A25613C0228056805613005782200F69201F565A690E7F80565A
69558469675590C7FC680D0F81555A680D3F84681F7F555A685482545B9DC8FC5485671E
0F545A670C3F82545A670CFF866765535B9CC9FC5383535A660B1F87661D3F535A660BFF
83525B6652889BCBFC64525A650A1F85525A650A7F88651CFF515B6551865190CCFC6409
0F89641B1F515A64097F86515A64508A64625090CDFC63080F87505A98BFFC508AA26297
C0FCA26161A24F8B50CE1207190F4F5A62193F4F48876207FF8C62604E5B97CFFC604E48
8861061F8D61183F4E5A6118FF4D4988614D8E96D1FC5F4D5A60171F4D488A60057F8E60
17FF4C5B4C5BA24C90D27E5E4C488EA24C5A167F16FF4B5B4B8D5D4BA17E033F694B7F4A
B56802076E9CB67E021F6E1E0391B700C00B0F6F7E011F04F852B812FC001FB900F0081F
BB12F04872501AF84872501AFCA2BA98BCFCA34F866CA118F8D83FC0C949E03FFCCB13F0
>206 204 117 331 227 65 D E
%EndDVIPSBitmapFont
/Fd 139[79 111 95 1[143 1[143 222 79 4[143 95 127 1[127
1[127 13[159 2[159 80[{TeXBase1Encoding ReEncodeFont}14
285.596 /Times-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
0 0 bop 3 4416 a
 /PSfrag where{pop(hello)[[0(Bl)1 0]](start)[[1(Bl)1 0]]2 0 -1/Begin
PSfrag}{userdict /PSfrag{pop}put}ifelse
 3 4416 a @beginspecial 109 @llx 212
@lly 541 @urx 631 @ury 4672 @rwi @clip @setspecial
%%BeginDocument: ps.ps
%!PS-Adobe-2.0 generated by plsub.f ...
%%BoundingBox: 109 212 541 631
/inch{72 mul}def /cm{72 mul 2.54 div}def 0 0 translate  1 1 scale
/tails 0.4 def % set to 0 for blanking chars without tails
/lto{lineto}def % shorthand for lineto
/blank-on{/b 1 def}def /blank-off{/b 0 def}def blank-on
/smaller 0.67 def % sub/superscripts are this much smaller
/shift   0.33 def % and are shifted by this much of the char height
/hshift  0.10 def % horizontal space, fraction of char height
% push size then font onto stack to select font
/choosefont {findfont exch scalefont setfont} def
% paint object on top of stack at current position
/debug {dup /str 30 string def str cvs show} def
% finding width of longest ordinate label (current width on stack) ...
/max 0 def /mxw{/w exch def w max gt {/max w def} if}def
% string centring, justification in the four quadrants
% and absicca and ordinate label centring ...
/showru{show}def
/showcu{dup stringwidth pop 2 div neg 0 rmoveto show}def
/showlu{dup stringwidth pop neg 0 rmoveto show}def
/showrc{0 h 2 div neg rmoveto show}def
/showcc{dup stringwidth pop 2 div neg h 2 div neg rmoveto show}def
/showlc{dup stringwidth pop neg h 2 div neg rmoveto show}def
/showrd{0 h neg rmoveto show}def
/showld{dup stringwidth pop neg h neg rmoveto show}def
/showcd{dup stringwidth pop 2 div neg h neg rmoveto show}def
/showa{gsave fontsize /Symbol choosefont
       dup stringwidth pop 2 div neg h 1.5 mul neg rmoveto show grestore}def
/showA{gsave fontsize /Symbol choosefont
       dup stringwidth pop 2 div neg h 0.5 mul rmoveto show grestore}def
/showo{gsave fontsize /Symbol choosefont
       dup stringwidth pop dup mxw h 2 div add neg h 2 div neg rmoveto show grestore}def
/showO{gsave fontsize /Symbol choosefont
       dup h 2 div h 2 div neg rmoveto show grestore}def
% aliases for pslabl ...
/show0{showcc}def /show1{show}def /show2{showrd}def /show3{showld}def
/show4{showlu}def
% newline macros for horizontal and vertical labelling ...
/newlinehf{currentpoint fontsize sub moveto}def
/newlinevf{currentpoint exch fontsize add exch moveto}def
/newlinehr{currentpoint fontsize add moveto}def
/newlinevr{currentpoint exch fontsize sub exch moveto}def
/savecurrentpoint {currentpoint /ybak exch def /xbak exch def} def
% end preamble ...

 % FONT: set font and fontsize ..
/font /Times-Roman def /fontsize  24 def
/h fontsize 0.6 mul def % h is about char height
fontsize font choosefont
  1.5 setlinewidth 1 setlinejoin [ ] 0 setdash
% --- FRME : axes at x=.95 2.05  y=.95 2.05  bold=3
/max 0 def 
  1.5 setlinewidth 1 setlinejoin [ ] 0 setdash
newpath 144 234 moveto 540 234 lto
 540 630 lto
 144 630 lto
 144 234 lto closepath gsave 1 1 1 setrgbcolor fill grestore stroke
newpath 162 234 moveto 162 243.9 lto stroke
gsave blank-on    162.0   234.0 moveto (1) showa  grestore
newpath 198 234 moveto 198 239.9 lto stroke
newpath 234 234 moveto 234 243.9 lto stroke
gsave blank-on    234.0   234.0 moveto (1.2) showa  grestore
newpath 270 234 moveto 270 239.9 lto stroke
newpath 306 234 moveto 306 243.9 lto stroke
gsave blank-on    306.0   234.0 moveto (1.4) showa  grestore
newpath 342 234 moveto 342 239.9 lto stroke
newpath 378 234 moveto 378 243.9 lto stroke
gsave blank-on    378.0   234.0 moveto (1.6) showa  grestore
newpath 414 234 moveto 414 239.9 lto stroke
newpath 450 234 moveto 450 243.9 lto stroke
gsave blank-on    450.0   234.0 moveto (1.8) showa  grestore
newpath 486 234 moveto 486 239.9 lto stroke
newpath 522 234 moveto 522 243.9 lto stroke
gsave blank-on    522.0   234.0 moveto (2) showa  grestore
newpath 162 630 moveto 162 620.1 lto stroke
newpath 198 630 moveto 198 624.1 lto stroke
newpath 234 630 moveto 234 620.1 lto stroke
newpath 270 630 moveto 270 624.1 lto stroke
newpath 306 630 moveto 306 620.1 lto stroke
newpath 342 630 moveto 342 624.1 lto stroke
newpath 378 630 moveto 378 620.1 lto stroke
newpath 414 630 moveto 414 624.1 lto stroke
newpath 450 630 moveto 450 620.1 lto stroke
newpath 486 630 moveto 486 624.1 lto stroke
newpath 522 630 moveto 522 620.1 lto stroke
newpath 144 252 moveto 153.9 252 lto stroke
gsave blank-on    144.0   252.0 moveto (1) showo  grestore
newpath 144 288 moveto 149.9 288 lto stroke
newpath 144 324 moveto 153.9 324 lto stroke
gsave blank-on    144.0   324.0 moveto (1.2) showo  grestore
newpath 144 360 moveto 149.9 360 lto stroke
newpath 144 396 moveto 153.9 396 lto stroke
gsave blank-on    144.0   396.0 moveto (1.4) showo  grestore
newpath 144 432 moveto 149.9 432 lto stroke
newpath 144 468 moveto 153.9 468 lto stroke
gsave blank-on    144.0   468.0 moveto (1.6) showo  grestore
newpath 144 504 moveto 149.9 504 lto stroke
newpath 144 540 moveto 153.9 540 lto stroke
gsave blank-on    144.0   540.0 moveto (1.8) showo  grestore
newpath 144 576 moveto 149.9 576 lto stroke
newpath 144 612 moveto 153.9 612 lto stroke
gsave blank-on    144.0   612.0 moveto (2) showo  grestore
newpath 540 252 moveto 530.1 252 lto stroke
newpath 540 288 moveto 534.1 288 lto stroke
newpath 540 324 moveto 530.1 324 lto stroke
newpath 540 360 moveto 534.1 360 lto stroke
newpath 540 396 moveto 530.1 396 lto stroke
newpath 540 432 moveto 534.1 432 lto stroke
newpath 540 468 moveto 530.1 468 lto stroke
newpath 540 504 moveto 534.1 504 lto stroke
newpath 540 540 moveto 530.1 540 lto stroke
newpath 540 576 moveto 534.1 576 lto stroke
newpath 540 612 moveto 530.1 612 lto stroke
  1.5 setlinewidth 1 setlinejoin [ ] 0 setdash
% ---  xt1=1 tsx=.1 mtx=2  yt1=1 tsy=.1 mty=2
 % FRME: Label axes ...
   342.0   234.0 moveto 0 h 3 mul neg rmoveto
   144.0   432.0 moveto h 2 mul max add neg 0 rmoveto
 % FRME: adding title ...
   540.0   630.0 moveto 0 h 0.5 mul rmoveto
% --- plcrv: new curve, 2 pts lt 1 bold 3 ---
gsave newpath 162 252 moveto 162 612 lineto
              522 612 lineto 522 252 lineto closepath clip
newpath 162 252 moveto 522 612 lto

 stroke grestore
% --- pstr: tx: rot=75 blk=T  "hello" at 1.5,1.5(u) 342.0,432.0(m)
   342.0   432.0 moveto
gsave blank-on 75 rotate (hello) show   grestore newlinehf
% --- pstr: tx: blk=T  "start" at 1.2,1(u) 234.0,252.0(m)
   234.0   252.0 moveto
gsave blank-on (start) show   grestore newlinehf
%%BoundingBox: 144 234 540 630
showpage

%%EndDocument
 @endspecial 3 4416 a
 /End PSfrag
 3 4416 a 3 3268 a
 /Hide PSfrag
 3 3268 a -2352
3462 a Fd(PSfrag)70 b(replacements)p -2352 3547 2356
6 v 3 3553 a
 /Unhide PSfrag
 3 3553 a -371 3949 a
  {
 -371 3949 a Fc(A)-144
3985 y Fb(x)-371 3949 y
  } 0/Place PSfrag
 -371 3949 a -644 4416 a
  {
 -644
4416 a Fa(end)-644 4416 y
  } 1/Place PSfrag
 -644 4416 a eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
