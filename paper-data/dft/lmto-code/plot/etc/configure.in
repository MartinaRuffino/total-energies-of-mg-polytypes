dnl Process this file with autoconf to produce a configure script.
dnl Revisions
dnl   8 Jul 01  Revised compiler environment variable from 'F77' to 'FC'

AC_INIT(fplot.f)
AC_CONFIG_AUX_DIR(etc/)
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_RANLIB
AC_PROG_MAKE_SET
AC_CANONICAL_SYSTEM

PLDIR=`pwd`
PATH=$PATH:$PLDIR
prefix=$HOME
version=3.20

# Set up shell script to handle any extra code preprocessing
\rm -f config.cleanup; touch config.cleanup; chmod +x config.cleanup
echo '#!/bin/sh  -f' >config.cleanup
echo ' ' >>config.cleanup
cleanup="Notes:"

# --- Find and check C compiler (Do here to avoid bug on Sun) ---
if test -z "$CC"; then
  AC_CHECK_PROG(CC, cc, cc)
else
  AC_MSG_CHECKING([C compiler])
  CCC=
  AC_CHECK_PROG(CCC, $CC, "ok", "no")
  if test "$CCC" = "no"; then
     echo "*** Couldn't find C compiler \"$CC\" ...  aborting"
     exit -1
  fi
fi

# --- Find and check fortran compiler---
if test -z "$FC"; then
  AC_CHECK_PROGS(FC, f90 cf90 cf77 fort fort77 xlf77 xlf90 xlf pgf90 pgf77 f77 g77, false)
  if test "$FC" = "false"; then
     echo "*** Couldn't find fortran compiler ...  aborting"
     exit -1
  fi
else
  FCOMP=
  AC_CHECK_PROG(FCOMP, $FC, "ok", "no")
  if test "$FCOMP" = "no"; then
     echo "*** Couldn't find fortran compiler \"$FC\" ...  aborting"
     exit -1
  fi
fi
export CC
export FC

# --- Check for fortran compiler extensions ---
AC_MSG_CHECKING([whether fortran compiler is an f90 compiler])
AC_CHECK_FOR_F90
echo $FC_IS_F90
AC_SUBST(FC_IS_F90)
AC_MSG_CHECKING([whether fortran compiler allows automatic arrays])
AC_CHECK_FOR_AUTO_ARRAY
echo $FC_AUTOARRAY
AC_SUBST(FC_AUTOARRAY)

# --- Find slatsm.a, if not supplied ---
if test -z "$LIBSLA"; then look_for_libsla=yes; fi
if test -z "$LIBSLA"; then
AC_CHECK_FILES(`etc/absolute-path ..`/slatsm/slatsm.a , try=yes , try=no)
if test "$try" = "yes"; then  LIBSLA=`etc/absolute-path ..`/slatsm/slatsm.a; fi
else
  AC_MSG_RESULT([Using LIBSLA = $LIBSLA supplied by environment variable ])
fi
if test -z "$LIBSLA"; then
AC_CHECK_FILES($PLDIR/slatsm/slatsm.a , try=yes , try=no)
if test "$try" = "yes"; then  LIBSLA=$PLDIR/slatsm/slatsm.a; fi
fi

if test ! -r "$LIBSLA"; then
  echo  abort : archive \"$LIBSLA\" missing or unreadable
  echo '        if slatsm.a is in a path different from ./slatsm or ../slatsm,'
  echo '        invoke configure with "env LIBSLA=path-of-slatsm.a ./configure"'
  exit -1
fi

# --- Find appropriate machine mnemonic for etc/Makemakefile ---
if test ! -z "$MACHINE"; then
  echo $ac_n "does Makemakefile recognize environment variable MACHINE=$MACHINE? ... $ac_c"
  MNEMONIC=`etc/Makemakefile $MACHINE --check`
  if test -z "$MNEMONIC"; then
    echo  '  '
    echo  '  ' Sorry, etc/Makemakefile failed to recognize machine mnemonic $MACHINE
    echo  '  ' you supplied with environment variable "MACHINE".  Try unsetting it,
    echo  '  ' or invoking configure with \'env MACHINE= ./configure ...\',
    echo  '  ' or updating etc/Makemakefile.
    exit -1
  else
    echo ' yes'
  fi
else
  echo $ac_n "Try and identify a machine mnemonic ... $ac_c"
  MNEMONIC=`etc/Makemakefile -- --check`
  if test -z "$MNEMONIC"; then
    echo  '  Sorry, etc/Makemakefile does not know about this machine.'
    echo  '  Try invoking etc/config.guess.  If that works properly,'
    echo  '  there is a bug in etc/Makemakefile.  Please send the string'
    echo  '  produced by config.guess and a description of the problem'
    echo  '  to mvansch@ca.sandia.gov'
    exit -1
  else
    echo ' ' found $MNEMONIC
  fi
fi

# --- Check whether to add zero's to output file  ---
AC_MSG_CHECKING([whether floating point formats are of the IBM type])
case "${host}" in
  *aix* ) echo yes
          ADD0=--add0;;
      * ) echo no;;
esac
AC_SUBST(ADD0)

# --- Minimum command-line arguments so fortran compile/link works sans error ---
FCARGS=
case "${MNEMONIC}" in

  SGI* ) FCARGS=-64;;

  HP ) FCARGS=+U77;;

esac

# --- See whether libraries specified in LIBLOC exist ---
if test -n "$LIBLOC" ; then
  AC_MSG_RESULT([Checking that files specified in LIBLOC (\"$LIBLOC\") are present])
  for llocl in $LIBLOC; do
    case "$llocl" in
      -* ) ;;

      * ) if test -r "$llocl"; then
            echo ' '>/dev/null
          else
            AC_MSG_RESULT([File $llocl from LIBLOC not readable ... configure aborting])
            exit
	  fi ;;
    esac
  done
fi

# --- Find math libraries, do other architecture-specific stuff  ---
# Look for machine-specific libraries
case "${MNEMONIC}" in

  LINUX_PGI )
    ACX_FIND_ROUTINE_IN_LIB(dcopy, -lblas,
    ACX_FIND_ROUTINE_IN_LIB(dgetrs, [-llapack -lblas], [LIBLOCL="$LIBLOCL -llapack -lblas"], [LIBLOCL="$LIBLOCL -lblas"]))
#   ACX_FIND_ROUTINE_IN_LIB(acos__, -lpgftnrtl,  [LIBLOCL="$LIBLOCL -lpgftnrtl"], )
#
#   if test "$FC" = "pgf77"; then
#     AC_CHECK_PROG(FC90, pgf90, "ok", "no")
#     if test "$FC90" = "ok"; then
#   	AC_MSG_RESULT([Substituting pgf90 for pgf77])
#  	FC=pgf90
#     fi
#   fi
#
    if test "$FC" = "pgf90"; then
     AC_MSG_RESULT([Adding -lpgftnrtl to LIBLOC])
     LIBLOCL="$LIBLOCL -lpgftnrtl"
    fi
    ;;

  LINUXF ) AC_CHECK_LIB(cxml, main, [LIBLOCL="$LIBLOCL -lcxml"]) ;;

  LINUX* ) AC_CHECK_LIB(atlas, main, [LIBLOCL="$LIBLOCL -latlas"]) ;;

#   DECA ) AC_CHECK_LIB(dxml, main, [LIBLOCL="$LIBLOCL -ldxml"]) ;;

  DECA ) AC_CHECK_LIB(cxml, main, [LIBLOCL="$LIBLOCL -lcxml"]) ;;

  HP* ) AC_CHECK_LIB(lapack, main, [LIBLOCL="$LIBLOCL -llapack"])
        AC_CHECK_LIB(blas, main, [LIBLOCL="$LIBLOCL -lblas"])
        AC_CHECK_LIB(m, main, [LIBLOCL="$LIBLOCL -lm"])
        AC_CHECK_LIB(vec, main, [LIBLOCL="$LIBLOCL -lvec"]) ;;

  AIX* ) AC_CHECK_LIB(essl, main, [LIBLOCL="$LIBLOCL -lessl"]);;

  SGI* ) AC_CHECK_LIB(complib.sgimath_mp, main, [LIBLOCL="$LIBLOCL -mp -lcomplib.sgimath_mp"]);;

  CRAY* ) AC_CHECK_LIB(-lsci, main, [LIBLOCL="$LIBLOCL -lsci"]);;

esac

# --- Look for machine-independent libraries ---
# ... 27 Nov 00 if -latlas, look for -lf77blas
have_atlas=no
have_f77blas=no
for llocl in $LIBLOC $LIBLOCL; do
  if test "$llocl" = "-latlas"; then have_atlas=yes; fi
  if test "$llocl" = "-lf77blas"; then have_f77blas=yes; fi
done
if (test "$have_atlas" = "yes") && (test "$have_f77blas" = "no"); then
  AC_CHECK_LIB(f77blas, main, [LIBLOC=`echo $LIBLOC | sed "s/-latlas/-lf77blas -latlas/"`;
                              LIBLOCL=`echo $LIBLOCL | sed "s/-latlas/-lf77blas -latlas/"`])
fi

# Merge LIBLOC and LIBLOCL, paring duplicate libraries
libnew="$LIBLOC"
for llocl in $LIBLOCL; do
for lloc  in $LIBLOC; do
  if test "$lloc" = "$llocl"; then break; fi
done
  if test "$lloc" != "$llocl"; then libnew="$libnew $llocl"; fi
done
LIBLOC="$libnew"

if test -n "$LIBLOCL" ; then AC_MSG_RESULT([Adding libraries \"$LIBLOCL\" to LIBLOC]); fi
AC_MSG_RESULT([Using LIBLOC = \"$LIBLOC\" ])

# --- Miscellaneous checks ---

# --- Create Make.inc.in ---
AC_SUBST(LIBSLA)
AC_SUBST(LIBLOC)
AC_SUBST(PLDIR)
AC_SUBST(SHELL)
# ACX_ZDIFF_KSH(testing,$host)

AC_MSG_RESULT([etc/Makemakefile $MNEMONIC -defs -LIBSLA '@LIBSLA@' -LIBLOC '@LIBLOC@' > Make.inc.in])
etc/Makemakefile $MNEMONIC -defs -LIBSLA '@LIBSLA@' -LIBLOC '@LIBLOC@' >Make.inc.in
# echo "# --- Path for various utilities ---" >>Make.inc.in
# echo "CCOMP = $CCOMP" >>Make.inc.in
# echo 'F2C = @F2C@' >>Make.inc.in
echo "# --- Compiler extensions ---" >>Make.inc.in
echo 'FC_IS_F90 = @FC_IS_F90@' >>Make.inc.in
echo 'FC_AUTOARRAY = @FC_AUTOARRAY@' >>Make.inc.in
# Later, Make.inc will be overwritten by configure, but some stuff is needed out of it meanwhile
cp Make.inc.in Make.inc

# -------------- Setup for Makefile.in and main/Makefile.in -----------
# # Make a temporary copy of MakeMainMakefile since ccomp may not be in path
# cat MakeMainMakefile | sed s:ccomp:$CCOMP: >MakeMainMakefile~
# chmod +x MakeMainMakefile~
# AC_SUBST(RANLIB)
# AC_MSG_RESULT([Creating file Makefile.in using MakeMainMakefile~ -cp $extensions :])
# MakeMainMakefile~ -cp $extensions >Makefile.in

# How the make dependency is handled depends on whether we are using GNU make
if test "`make -v xx 2>&1 | head -1 | awk '{print toupper($1)}'`" = GNU;
  then DEP_RULE='%:	%'
else
  DEP_RULE='$$@'
fi
AC_SUBST(DEP_RULE)

makefiles="Makefile"
AC_OUTPUT(Make.inc $makefiles)
