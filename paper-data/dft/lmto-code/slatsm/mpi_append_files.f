      subroutine mpi_append_files(opt,fn,nproc)
C- Append ASCII files generated by other MPI processes to master file
C ----------------------------------------------------------------------
Ci Inputs
Ci   opt   : 1s bit nonzero => delete files from non-master processes after transfer
Ci   fn    : file name
Ci   nproc : number of processors
Co Outputs
Cs Command-line switches
Cl Local variables
Cl         :
Cr Remarks
Cr
Cu Updates
Cu   07 Dec 17 First created
C ----------------------------------------------------------------------
      implicit none
C ... Passed parameters
      integer opt,nproc
      character*(*) fn
C ... Local parameters
      integer, parameter :: maxlen = 256  ! Warning! Fortran standard should limit this to 132.
      character fileid*(maxlen),append*10,strn*(maxlen)
      integer ifi,jfi,i,rank,procid
      integer, parameter :: master = 0, lascii = 0
      procedure(logical) :: isopen,rdstrn
      procedure(integer) :: mpipid
      procedure(integer) :: fopna,fopnig,fopng

      if (nproc < 2) return

      ifi = fopna(trim(fn),-1,0)
      procid = mpipid(1)
C     print *, 'mpi_append_files',procid,ifi,trim(fn),isopen(ifi,.false.)

C     Close files for non-master processes
      if (procid > 0 .and. isopen(ifi,.false.)) call fclose(ifi)

      if (procid == master) then
        i = fopnig(fileid,ifi,lascii) ! Get full file name
        do  rank = 1, nproc-1
          call awrit1('%x_%i',append,len(append),0,rank)
          jfi = fopng(trim(fileid)//trim(append),-1,lascii); rewind jfi
          do
            strn = ' '
            if (.not. rdstrn(jfi,strn,len(strn),.false.)) exit
            write(ifi,"(a)") trim(strn)
          enddo
          if (mod(opt,2) == 1) call dfclos(jfi)
          call fclr(' ',jfi)
        enddo
        call fclose(ifi)
      endif

      end

