#!/bin/csh -f

# This shell script returns a list of routines that must be compiled with
# switches weaker than the standard FFLAGS
# It uses some or all of the following variables to specify the architecture:
#   machine-configuration is the standard GNU format in 'config.sub':
#       CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM
#   machine-mnemonic is the machine mnemonic identified by 'Makemakefile'

if ($#argv != 2) then
  echo usage:  SPECIAL-FLAGS   machine-configuration  machine-mnemonic
  exit -1
endif

set host = $1
set mnemonic = $2

# Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).
# This is taken from config.sub
set maybe_os = `echo $host | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\2/'`
switch ($maybe_os)
  case "linux-gnu*":
    set os = $maybe_os
    set basic_machine = `echo $host | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`
    breaksw
  default:
    set basic_machine = `echo $host | sed 's/-[^-]*$//'`
    if ( $basic_machine != $maybe_os) then
      set os = `echo $host | sed 's/.*-//'`
    else
      set os
    endif
endsw

# echo $basic_machine $os

# --- Special compilation, FFLAGS_NONE ---
unset lst
# if ($basic_machine =~ *convex*) set lst = makalp
# if ($basic_machine =~ *cray*) set lst = makidx
if ($mnemonic == LINUX_PGI) set lst = dlamch
if ($mnemonic == LINUXI) set lst = dlamch
if ($?lst > 0) then
  echo '$(FC) $(FFLAGS_NONE) ::' $lst
endif

# --- Special compilation, FFLAGS_LESS3 ---
unset lst
if ($basic_machine =~ alpha* && $os =~ osf*) set lst = htridi
if ($basic_machine =~ alphaev* && $os =~ osf*) set lst = htridi
if ($basic_machine =~ alphaev* && $mnemonic == LINUXF) set lst = htridi
if ($mnemonic == INTEL_IFC) set lst = (huntx hunti polcof rdfiln)
if ($?lst > 0) then
  echo '$(FC) $(FFLAGS_LESS3) ::' $lst
endif

# --- Special compilation, FFLAGS_LESS2 ---
# NB: on some aix machines atomsr may be compiled with higher opt
unset lst
#  if ($os =~ aix*) set lst = (rdccat atomsr secm2c)
#  if ($os =~ hpux*) set lst = (radmsh)
#  if ($os =~ hpux*) set lst = (radmsh)
#  if ($basic_machine =~ mips-sgi) set lst = (npr2tb)
if ($?lst > 0) then
  echo '$(FC) $(FFLAGS_LESS2) ::' $lst
endif

# --- Special compilation, FFLAGS_LESS ---
unset lst
unset lst2
# if ($os =~ aix*) set lst = ()
# if ($os =~ hpux*) set lst = ()
# if ($basic_machine =~ sparc*) set lst = ()
  if ($basic_machine =~ alphaev* && $os =~ osf*) set lst = (awrite)
if ($mnemonic =~ OSXI*) set lst = htridi
  if ($basic_machine =~ *cray*) set lst = (imtqlv)
  if ($basic_machine =~ mips-sgi*) then

    set lst = dmach
    set compiler_name = `f77 -version -64 | & awk '{print $1}'`
    switch ($compiler_name)

      case "Ragnarok":
        set lst = (ivshel)
        breaksw

      case "Mongoose":
#     patch for "f77: Error: malformed or unknown option: -version"
      case "f77:":
        set lst = (dmach minfit)
#       Whether this needs special treatment depends on compiler version
#       set lst2 = (ishell)
        set procid = `hinv | grep Processor | grep MHZ | head -1 | awk '{print $4}'`
        if ($procid == 'MHZ') set procid = `hinv | grep Processor | grep MHZ | head -1 | awk '{print $5}'`
        if ($procid == 'IP32') then
          set lst = (a2bin)
        endif
        echo "# (warning): You may need to compile ishell.f without optimization"
        breaksw

#       for f77 v 7.2 and later
        case "MIPSpro":
          set lst = ($lst rdfiln minfit dsmpy)
          breaksw
    endsw
  endif
  if ($?lst > 0) then
    echo '$(FC) $(FFLAGS_LESS) ::' $lst
  endif
  if ($?lst2 > 0) then
    echo '$(FC) $(FFLAGS_LESS2) ::' $lst2
  endif

# --- Special compilation, FFLAGS_MORE ---
  unset lst
  if ($?lst > 0) then
    echo '$(FC) $(FFLAGS_MORE) ::' $lst
  endif

# --- Special compilation, FFLAGS, possibly other directories ---
  unset lst
