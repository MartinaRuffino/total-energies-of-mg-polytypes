#!/bin/tcsh
# Analyze timings for response function calculation


set fn = lx0
if ($#argv > 0) then
  set fn = $1
  shift
endif

echo -n "Core matrix elements"
grep Since $fn | grep "complete core matrix elements" | awk '{print $(NF-3), $(NF-1)}' | mc -f7x,2f11.1 . -rsum | tail -1

echo -n "valence matrix elements"
grep Since $fn | grep "complete valence matrix elements" | awk '{print $(NF-3), $(NF-1)}' | mc -f5x,f10.1,f11.1 . -rsum | tail -1

echo -n "interstitial matrix elements"
grep Since $fn | grep "complete interstitial matrix elements" | awk '{print $(NF-3), $(NF-1)}' | mc -ff10.1,f11.1 . -rsum | tail -1

echo .....

set sum = (0 0)
set cpu = (0 0)

set cpu = `grep Since $fn | egrep -E "complete .* matrix elements" | awk '{print $(NF-3), $(NF-1)}' | mc -f2f14.6 . -rsum | tail -1`
echo -n "total matrix elements      "
echo $cpu | mc -f2f11.1 .  | tail -1
set sum = `echo $cpu | mc -f2f15.4 -vc1=$sum[1] -vc2=$sum[2] . -e2 x1+c1 x2+c2 | tail -1`

set cpu = `grep Since $fn | egrep 'zmelt . overlap' | awk '{print $(NF-3), $(NF-1)}' | mc -f2f14.6 . -rsum | tail -1`
echo -n "zmelt . overlap            "
echo $cpu | mc -f2f11.1 .  | tail -1
set sum = `echo $cpu | mc -f2f15.4 -vc1=$sum[1] -vc2=$sum[2] . -e2 x1+c1 x2+c2 | tail -1`

set cpu = `grep Since $fn | grep "complete generation of rcxq" | awk '{print $(NF-3), $(NF-1)}' | mc -f2f14.6 . -rsum | tail -1`
echo -n "generation of rcxq         "
echo $cpu | mc -f2f11.1 .  | tail -1
set sum = `echo $cpu | mc -f2f15.4 -vc1=$sum[1] -vc2=$sum[2] . -e2 x1+c1 x2+c2 | tail -1`

grep Since $fn | grep "complete generation of zrr" > /dev/null
if ($status == 0) then
set cpu = `grep Since $fn | grep "complete generation of zrr" | awk '{print $(NF-3), $(NF-1)}' | mc -f2f14.6 . -rsum | tail -1`
echo -n "generation of zrr          "
echo $cpu | mc -f2f11.1 .  | tail -1
set sum = `echo $cpu | mc -f2f15.4 -vc1=$sum[1] -vc2=$sum[2] . -e2 x1+c1 x2+c2 | tail -1`
endif

grep Since $fn | grep "symmetrizing rcxq" > /dev/null
if ($status == 0) then
set cpu = `grep Since $fn | grep "symmetrizing rcxq" | awk '{print $(NF-3), $(NF-1)}' | mc -f2f14.6 . -rsum | tail -1`
echo -n "symmetrization             "
echo $cpu | mc -f2f11.1 .  | tail -1
set sum = `echo $cpu | mc -f2f15.4 -vc1=$sum[1] -vc2=$sum[2] . -e2 x1+c1 x2+c2 | tail -1`
endif



echo -n "total                 " `echo $sum | mc -f2f10.1 .  | tail -1` sec = `echo $sum | mc -f2f10.1 -vc1=$sum[1] -vc2=$sum[2] . -e2 x1/60 x2/60 | tail -1` min
tail -1 $fn
egrep 'idalloc.*Max' $fn | tail -1 | awk '{printf "Max alloc %d\n", $NF}'
