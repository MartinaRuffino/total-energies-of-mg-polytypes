#!/bin/tcsh

set testfile = $0
set testdir = $testfile:h
set topdir  = `cd $testdir/../..; pwd`
set path = ($topdir $topdir/utils $path)
set space = '   '
set failed = xx

set mcx = `which mcx`
if (-x "$mcx") then
  if `$mcx --h |& grep mc | grep vsn | awk '{print ($7 == "(vsn" && ($8 * 1 >= 1.04))}'` set have_mc
endif
if ($?have_mc == 0) then
  echo "$space $testfile requires mcx to be in your path"
  set failed = (xx setup)
  goto finish
endif

echo
echo '... test GF and GF+SO in various screening transformations ..., noncollinear cases'
echo

while (`echo $1 | sed -e 's/\(.\).*/\1/' `  ==  "-")
  set arg1 = $1; shift
  switch ($arg1)
    case "--clean":
      set clean
      breaksw
    default:
      echo unrecognized switch $arg1
      goto usage
  endsw
end

if ($?clean > 0) then
touch ctrl.fept
touch 0-so 0-so0nc ctrl.fept
echo "$space rm -f rsta.fept.lmgf.so *.fept nosymc nosymc0 nosymnc0 ?-so ?-so0nc"
             rm -f rsta.fept.lmgf.so *.fept nosymc nosymc0 nosymnc0 ?-so ?-so0nc
exit
endif

set n = 0

# ------------------- 1 ------------------
@ n = $n + 1
set lst = (0 1 2 4 5)
echo "    $n. test collinear GF+SO, w/out symmetry for gamma = 0, and with symmetry for gamma = $lst"
touch ctrl.fept
echo "$space rm -f *.fept"
             rm -f *.fept

echo "$space cp $testdir/ctrl.fept $testdir/rsta.fept.lmgf.so ."
             cp $testdir/ctrl.fept $testdir/rsta.fept.lmgf.so .
echo "$space mv rsta.fept.lmgf.so rsta.fept"
             mv rsta.fept.lmgf.so rsta.fept
echo "$space lmstr fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=0 -vnit=1 --pr31,30 -vgamma=0 --quit=rho > /dev/null"
             lmstr fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=0 -vnit=1 --pr31,30 -vgamma=0 --quit=rho > /dev/null
echo "$space lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=0 -vnit=0 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0703656 --rs=1,0 > /dev/null"
             lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=0 -vnit=0 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0703656 --rs=1,0 > /dev/null

echo
echo "$space lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=0 -vnit=1 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0703656 --nosymc > nosymc"
             lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=0 -vnit=1 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0703656 --nosymc > nosymc
echo "$space do for gam = $lst" : 'lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=0 -vnit=1 --pr31,30 -vgamma=$gam --quit=rho -ef=-0.0703656 > $gam-so'

foreach gam ($lst)
rm -f vshft.fept mixm.fept
lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=0 -vnit=1 --pr31,30 -vgamma=$gam --quit=rho -ef=-0.0703656 > $gam-so
end

set tolq = `grep DQ  nosymc ?-so  | vextract . DQ | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
set tole = `grep sumev= nosymc ?-so | vextract . sumev | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
set tols = `grep SOC nosymc ?-so | awk '{if (NR%3 == 0) {print $6}}' | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
echo "    RMS DQ for nosymc ?-so : " `grep DQ  nosymc ?-so  | vextract . DQ` '  ' fluctuation $tolq
echo "    sumev  for nosymc ?-so : " `grep sumev= nosymc ?-so | vextract . sumev` '  ' fluctuation $tole
echo "    SOC12 on Pt for each of repsns: " `grep SOC nosymc ?-so | awk '{if (NR%3 == 0) {print $6}}'` '  ' fluctuation $tols
set tol = `echo $tole $tols $tolq | mcx . -csum -w:nohead .`
if (`echo $tol 0 | awk -v tol=.000001 '{{k=($1-$2)>0?($1-$2):($2-$1);} print (k<=tol)}'`) then
  echo "$space GF+SO test for multiple screening transformations PASSED"
else
  set failed = ($failed $n)
  echo "$space GF+SO test for multiple screening transformations FAILED"
endif
echo

finish:
if ($#failed <= 1) then
  echo "    collinear GF+SO test for multiple screening transformations PASSED"
else
  shift failed
  echo "    collinear GF+SO test  for multiple screening transformations FAILED"
endif
echo

# ------------------- 2 ------------------
@ n = $n + 1
echo "    $n. test GF+SO, spin flipping Pt site and rotating Pt site with --spinoronly ..., scaling SO to 0"
rm -f vshft.fept mixm.fept eula.fept
echo
echo "$space redo collinear lmgf with SO scaled to 0 (file nosymc0):"
echo "    cp $testdir/socscl.fept ."
          cp $testdir/socscl.fept .
echo "$space lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=0 --spinoronly -vnit=1 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0741651 --nosym > nosymc0"
             lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=0 --spinoronly -vnit=1 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0741651 --nosym > nosymc0
echo "$space spin-flip Pt and remake ppars"
echo "    lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=0 -vnit=0 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0741651 --rs=1,0 '--rsedit~rs~read~set all 2 flip~add all  0 1 2 2~save~q' > /dev/null"
          lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=0 -vnit=0 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0741651 --rs=1,0 '--rsedit~rs~read~set all 2 flip~add all  0 1 2 2~save~q' > /dev/null
echo "    lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=0 -vnit=0 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0741651 --rs=1,0 '--rsedit~rs~read~set all 2 flip~add all  0 1 2 2~save~q'" > /dev/null
echo "$space lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=6 --spinoronly -vnit=0 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0741651 --rs=1,0 > /dev/null"
             lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=6 --spinoronly -vnit=0 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0741651 --rs=1,0 > /dev/null

echo
rm -f vshft.fept mixm.fept eula.fept
echo "$space lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=6 --spinoronly -vnit=1 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0741651 --nosym > nosymnc0"
             lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=6 --spinoronly -vnit=1 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0741651 --nosym > nosymnc0
set lst = (0 1 2)
echo "$space do for gam = $lst" : 'lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=6 --spinoronly -vnit=1 --pr31,30 -vgamma=$gam --quit=rho -ef=-0.0741651 > $gam-so0nc'
foreach gam ($lst)
rm -f vshft.fept mixm.fept
lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=6 --spinoronly -vnit=1 --pr31,30 -vgamma=$gam --quit=rho -ef=-0.0741651 > $gam-so0nc
end

set tolq = `grep DQ nosymc0 nosymnc0 ?-so0nc  | vextract . DQ | $mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
set tole = `grep LMGF nosymnc0 ?-so0nc| grep ehf | vextract . ehf | $mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
echo "    RMS DQ for nosymc0 nosymnc0 ?-so0nc : " `grep DQ nosymc0 nosymnc0 ?-so0nc  | vextract . DQ` '  ' fluctuation $tolq
echo "    ehf for nosymnc0 ?-so0nc : " `grep LMGF nosymnc0 ?-so0nc| grep ehf | vextract . ehf` '  ' fluctuation $tole
set tol = `echo $tole $tolq | $mcx . -csum -w:nohead .`
if (`echo $tol 0 | awk -v tol=.000001 '{{k=($1-$2)>0?($1-$2):($2-$1);} print (k<=tol)}'`) then
  echo "    noncollinear GF+SO test for multiple screening transformations PASSED"
else
  set failed = ($failed $n)
  echo "    noncollinear GF+SO test for multiple screening transformations FAILED"
endif
echo

# The following do not pass ... need some clarity about the role of orbital rotations
# # ------------------- 3 ------------------
# set lst = (1 2 4 5)
# @ n = $n + 1
# echo "    $n. test GF+SO, spin flipping Pt site and rotating Pt site with --spinoronly ...; compare to collinear case (nosymc) [note gamma=0 has problems]"
# rm -f vshft.fept mixm.fept eula.fept
# echo "    rm -f socscl.fept"
#           rm -f socscl.fept
# echo 
# echo "$space lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=6 --spinoronly -vnit=1 --pr31,30 -vgamma=1 --quit=rho -ef=-0.0679157 --nosym > nosymnc"
#              lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=6 --spinoronly -vnit=1 --pr31,30 -vgamma=1 --quit=rho -ef=-0.0679157 --nosym > nosymnc

# echo "$space do for gam = $lst" : 'lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=6 --spinoronly -vnit=1 --pr31,30 -vgamma=$gam --quit=rho -ef=-0.0679157 > $gam-sonc'
# foreach gam ($lst)
# rm -f vshft.fept mixm.fept
# lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=6 --spinoronly -vnit=1 --pr31,30 -vgamma=$gam --quit=rho -ef=-0.0679157 > $gam-sonc
# end

# set tolq = `grep DQ nosymnc ?-sonc  | vextract . DQ | $mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
# set tols = `grep SOC nosymnc ?-sonc | awk '{if (NR%3 == 0) {print $6}}' | $mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
# set tole = `grep LMGF nosymnc ?-sonc| grep ehf | vextract . ehf | $mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
# echo "    RMS DQ for nosymnc ?-sonc : " `grep DQ nosymnc ?-sonc  | vextract . DQ` '  ' fluctuation $tolq
# echo "    tols for nosymnc ?-sonc : "  `grep SOC nosymnc ?-sonc | awk '{if (NR%3 == 0) {print $6}}'` '  ' fluctuation $tols
# echo "    ehf for nosymnc ?-sonc : " `grep LMGF nosymnc ?-sonc | grep ehf | vextract . ehf` '  ' fluctuation $tole

# set tol = `echo $tole $tols $tolq | $mcx . -csum -w:nohead .`
# if (`echo $tol 0 | awk -v tol=.000001 '{{k=($1-$2)>0?($1-$2):($2-$1);} print (k<=tol)}'`) then
#   echo "    noncollinear GF+SO test for multiple screening transformations PASSED"
# else
#   set failed = ($failed $n)
#   echo "    noncollinear GF+SO test for multiple screening transformations FAILED"
# endif
# echo

# # ------------------- 4 ------------------
# @ n = $n + 1
# echo "    $n. test GF+SO, spin flipping Pt site and rotating Pt site with --spinoronly ..."
# rm -f vshft.fept mixm.fept eula.fept
# echo "$space redo lmgf with full SO"
# echo "    rm socscl.fept"
#           rm socscl.fept
# echo "    lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=0 -vnit=0 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0703656 --rs=1,0 '--rsedit~rs~read~set all 2 flip~add all  0 1 2 2~save~q' > /dev/null"
#           lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=0 -vnit=0 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0703656 --rs=1,0 '--rsedit~rs~read~set all 2 flip~add all  0 1 2 2~save~q' > /dev/null
# echo "$space lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=6 --spinoronly -vnit=0 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0703656 --rs=1,0 > /dev/null"
#              lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=6 --spinoronly -vnit=0 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0703656 --rs=1,0 > /dev/null

# echo
# echo "$space lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=6 --spinoronly -vnit=1 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0703656 --nosym > nosym"
#              lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=6 --spinoronly -vnit=1 --pr31,30 -vgamma=0 --quit=rho -ef=-0.0703656 --nosym > nosym
# echo "$space do for gam = $lst" : 'lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=6 --spinoronly -vnit=1 --pr31,30 -vgamma=$gam --quit=rho -ef=-0.0703656 > $gam-sonc'
# foreach gam ($lst)
# rm -f vshft.fept mixm.fept
# lmgf fept -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=6 --spinoronly -vnit=1 --pr31,30 -vgamma=$gam --quit=rho -ef=-0.0703656 > $gam-sonc
# end

# set tolq = `grep DQ nosym ?-sonc  | vextract . DQ | $mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
# set tole = `grep sumev= nosym ?-sonc | vextract . sumev | $mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
# set tols = `grep SOC nosym ?-sonc | awk '{if (NR%3 == 0) {print $6}}' | $mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
# echo "    RMS DQ for nosym ?-sonc : " `grep DQ  nosym ?-sonc  | vextract . DQ` '  ' fluctuation $tolq
# echo "    sumev  for nosym ?-sonc : " `grep sumev= nosym ?-sonc | vextract . sumev` '  ' fluctuation $tole
# set tol = `echo $tole $tols $tolq | $mcx . -csum -w:nohead .`
# if (`echo $tol 0 | awk -v tol=.000001 '{{k=($1-$2)>0?($1-$2):($2-$1);} print (k<=tol)}'`) then
#   echo "    noncollinear GF+SO test for multiple screening transformations PASSED"
# else
#   set failed = ($failed $n)
#   echo "    noncollinear GF+SO test for multiple screening transformations FAILED"
# endif
# echo


# @ n = $n + 1
# set lst = (0 1 2 4 5)
# echo "    $n. fully relativistic GF, spin flipping Pt site and rotating Pt site with --spinoronly ..."
# # echo '    symmetry does not work here, so use --nosym'
# touch  0-frnc-job1
# rm -f  ?-frnc-job1
# echo '    do for gam = $lst: lmgf fept -vgamma=$gam -vrel=2 -vgfmod=1 -vnk=8 -vnc=1 -vntht=6 -vnit=1 --pr31,30 -vidxf=1 --iactiv=no -vbegmom=2 -ef=-0.0695415 --quit=rho --nosym > $gam-frnc'
# foreach gam ($lst)
# rm -f mixm.fept vshft.fept save.fept eula.fept
# lmgf fept -vgamma=$gam -vrel=2 -vgfmod=1 -vnk=8 -vnc=1 -vntht=6 -vnit=1 --pr31,30 -vidxf=1 --iactiv=no -vbegmom=2 -ef=-0.0695415 --quit=rho --nosym > $gam-frnc
# end
# set tolq = `grep DQ  ?-frnc  | vextract . DQ | $mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
# set tole = `grep sumev=  ?-frnc | vextract . sumev | $mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
# set toll = `grep 'L+ - L-'  ?-frnc | grep -v '  2 ' | awk '{print $NF}' | $mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))' -rsum -w:nohead .`
# echo "    RMS DQ for ?-frnc : " `grep DQ  ?-frnc  | vextract . DQ` '  ' fluctuation $tolq
# echo "    sumev  for ?-frnc : " `grep sumev= ?-frnc | vextract . sumev` '  ' fluctuation $tole
# echo "    L+ - L- on Fe for the fr-nc, mode 1 calculations :  " `grep 'L+ - L-'  ?-frnc | grep -v '  2 ' | awk '{print $NF}'` '  ' fluctuation $toll
# set tol = `echo $tole $tolq $toll | $mcx . -csum -w:nohead .`
# if (`echo $tol 0 | awk -v tol=.000001 '{{k=($1-$2)>0?($1-$2):($2-$1);} print (k<=tol)}'`) then
#   echo "   " fully relativistic NC GF test mode 1 PASSED
# else
#   set failed = ($failed $n)
#   echo "   " fully relativistic NC GF test mode 1 FAILED
# endif
# echo

finish:
if ($#failed <= 1) then
  echo "    all GF+SO tests PASSED"
else
  shift failed
  echo "    the following nc GF+SO tests FAILED:  $failed"
endif
echo

