#!/bin/tcsh

set testfile = $0
set testdir = $testfile:h
set topdir  = `cd $testdir/../..; pwd`
set path = ($topdir $topdir/utils $path)
set mcx = `which mcx`
if (-x "$mcx") then
  if `$mcx --h |& grep mc | grep vsn | awk '{print ($7 == "(vsn" && ($8 * 1 >= 1.04))}'` set have_mc
endif
if (! $?have_mc) then
  echo "test.nio6 (abort) : missing mcx"
  exit -1
endif
set failed
set n = 0

@ n = $n + 1
echo "... test $n (collinear) GF+SO in various screening transformations"
echo '    Setup for standalone test --- confirm RMS DQ is small and results equivalent for spin-flipped, collinear cases (includes symmetry)'
echo "   "  $topdir/gf/test/test.gf --quiet fept 7 '> /dev/null'
$topdir/gf/test/test.gf --quiet fept 7 > /dev/null

echo '    Spin flipped case:'
echo '    cp $topdir/gf/test/rsta.fept.lmgf.idxf=1.ntht=6 rsta.fept'
          cp $topdir/gf/test/rsta.fept.lmgf.idxf=1.ntht=6 rsta.fept
echo "   "  rm -f mixm.fept vshft.fept eula.fept
rm -f mixm.fept vshft.fept eula.fept
echo '    run lmgf fept -vso=0 -vnk=8 -vnc=1 -vntht=6 -vnit=-1 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --quit=rho --rs=1,0 > out.lmgf0'
lmgf fept -vso=0 -vnk=8 -vnc=1 -vntht=6 -vnit=-1 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --quit=rho --rs=1,0 > out.lmgf0

echo '    Collinear case:'
echo '    cp $topdir/gf/test/rsta.fept.lmgf.idxf=1 rsta.fept'
          cp $topdir/gf/test/rsta.fept.lmgf.idxf=1 rsta.fept
echo "   "  rm -f mixm.fept vshft.fept eula.fept
rm -f mixm.fept vshft.fept eula.fept
echo "    run lmgf fept -vso=0 -vnk=8 -vnc=1 -vntht=0 -vnit=-1 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --quit=rho --rs=1,0 > out.lmgf"
lmgf fept -vso=0 -vnk=8 -vnc=1 -vntht=0 -vnit=-1 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --quit=rho --rs=1,0 > out.lmgf

set lst = (out.lmgf0 out.lmgf)
set tolq = `grep DQ $lst | vextract . DQ | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
set tole = `grep sumev= $lst | vextract . sumev | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
echo "    RMS DQ for $lst : " `grep DQ  $lst  | vextract . DQ` '  ' fluctuation $tolq
echo "    sumev  for $lst : " `grep sumev= $lst | vextract . sumev` '  ' fluctuation $tole
set tol = `echo $tole $tolq | mcx . -csum -w:nohead .`
if (`echo $tol 0 | awk -v tol=.000001 '{{k=($1-$2)>0?($1-$2):($2-$1);} print (k<=tol)}'`) then
  echo "   " GF test without SO comparing spin flip  PASSED
else
  set failed = ($failed $n)
  echo "   " GF test without SO comparing spin flip  FAILED
endif
echo

@ n = $n + 1
echo "... test $n (collinear) GF+SO, f not downfolded, mode 1 for gam = 0 1 2 4 5"
echo '    This test must be run after setup from prior test'
echo '    do for gam = 0 1 2 4 5: lmgf fept -vgamma=$gam -vso=1 -vrel=1 -vgfmod=1 -vnk=8 -vnc=1 -vntht=0 -vnit=20 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --quit=rho > $gam-so-job1'
echo '    Create SO matrix elements'
echo '    lmgf fept -vrel=1 -vso=1 -vgfmod=1 -vnk=8 -vnc=1 -vntht=0 -vnit=0 --pr31,30 -vidxf=1 --iactiv=no -vbegmom=2 > /dev/null'
          lmgf fept -vrel=1 -vso=1 -vgfmod=1 -vnk=8 -vnc=1 -vntht=0 -vnit=0 --pr31,30 -vidxf=1 --iactiv=no -vbegmom=2 > /dev/null
touch 0-so-job1
rm    ?-so-job1
echo '    echo  ef=-0.0716711  vconst=-0.0033760 > vshft.fept'
foreach gam (0 1 2 4 5)
rm -f mixm.fept save.fept eula.fept vshft.fept socscl.fept
          echo  ef=-0.0716711  vconst=-0.0033760 > vshft.fept
lmgf fept -vgamma=$gam -vso=1 -vrel=1 -vgfmod=1 -vnk=8 -vnc=1 -vntht=0 -vnit=20 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --quit=rho > $gam-so-job1
end

set lst = (?-so-job1)
set tolq = `grep DQ  $lst | vextract . DQ | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
set tole = `grep sumev= $lst | vextract . sumev | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
set tols = `grep SOC $lst | awk '{if (NR%3 == 0) {print $6}}' | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt(((x1-avg+1e-9)^2/nr))'  -rsum -w:nohead .`
echo "    RMS DQ $lst : " `grep DQ  $lst  | vextract . DQ` '  ' fluctuation $tolq
echo "    sumev  $lst : " `grep sumev= $lst | vextract . sumev` '  ' fluctuation $tole
echo "    SOC12 on Pt for each of repsns: " `grep SOC $lst | awk '{if (NR%3 == 0) {print $6}}'` '  ' fluctuation $tols
set tol = `echo $tole $tolq | mcx . -csum -w:nohead .`
if (`echo $tol 0 | awk -v tol=.000001 '{{k=($1-$2)>0?($1-$2):($2-$1);} print (k<=tol)}'`) then
  echo "   " scalar rel GF+SO test mode 1 PASSED
else
  set failed = ($failed $n)
  echo "   " scalar rel GF+SO test mode 1 FAILED
endif
echo

@ n = $n + 1
echo "... test $n (collinear) GF,  f not downfolded, (nspc=1,2), (real,spherical harmonics) (gam = 0 2 5) mode 10"
echo '    This test must be run after setup from prior test'
touch 0-job10 0-sh-job10  0-nc-job10
echo "   " rm -f mixm.fept eula.fept vshft.fept save.fept ?-job10 ?-sh-job10 ?-nc-job10
           rm -f mixm.fept eula.fept vshft.fept save.fept ?-job10 ?-sh-job10 ?-nc-job10
echo '    lmgf fept -vgamma=$gam -vso=0 -vnc=0 -vrel=1 -vgfmod=10 -vnk=8 -vntht=0 -vnit=20 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --quit=rho -vsharm=f > $gam-job10'
foreach gam (0 2 5)
lmgf fept -vgamma=$gam -vso=0 -vnc=0 -vrel=1 -vgfmod=10 -vnk=8 -vntht=0 -vnit=20 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --quit=rho -vsharm=f > $gam-job10
echo checksum FePt jr.fept `mcx -r:open jr.fept jr.fept -rsum -csum -w:nohead .` >> $gam-job10
end
echo '    lmgf fept -vgamma=$gam -vso=0 -vnc=0 -vrel=1 -vgfmod=10 -vnk=8 -vntht=0 -vnit=20 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --quit=rho -vsharm=t > $gam-sh-job10'
foreach gam (0 2 5)
lmgf fept -vgamma=$gam -vso=0 -vnc=0 -vrel=1 -vgfmod=10 -vnk=8 -vntht=0 -vnit=20 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --quit=rho -vsharm=t > $gam-sh-job10
echo checksum FePt jr.fept `mcx -r:open jr.fept jr.fept -rsum -csum -w:nohead .` >> $gam-sh-job10
end
echo '    lmgf fept -vgamma=$gam -vso=0 -vnc=1 -vrel=1 -vgfmod=10 -vnk=8 -vntht=0 -vnit=20 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --quit=rho -vsharm=f > $gam-nc-job10'
foreach gam (0 2 5)
lmgf fept -vgamma=$gam -vso=0 -vnc=1 -vrel=1 -vgfmod=10 -vnk=8 -vntht=0 -vnit=20 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --quit=rho -vsharm=f > $gam-nc-job10
echo checksum FePt jr.fept `mcx -r:open jr.fept jr.fept -rsum -csum -w:nohead .` >> $gam-nc-job10
end

set tolj = `grep -A 1 '2/3 J' ?-job10 ?-sh-job10  ?-nc-job10 | grep job10- | awk '{print $NF}' | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt((x1-avg+1e-9)^2/nr)' -rsum -w:nohead .`
echo "    2/3 J(Fe) for each mode 10 calculation :" `grep -A 1 '2/3 J' ?-job10 ?-sh-job10  ?-nc-job10 | grep job10- | awk '{print $NF}'`  '  ' fluctuation $tolj
set tolc = `grep checksum ?-job10 ?-sh-job10  ?-nc-job10 | awk '{print $NF}' | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt((x1-avg+1e-9)^2/nr)' -rsum -w:nohead .`
echo "    checksum Ft-Pt J for each mode 10 calculation :" `grep checksum ?-job10 ?-sh-job10  ?-nc-job10 | awk '{print $NF}'`  '  ' fluctuation $tolc
set tolq = `grep 'Sum of sphere charges' ?-job10 ?-sh-job10  ?-nc-job10 | awk '{print $NF}' | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt((x1-avg+1e-9)^2/nr)' -rsum -w:nohead .`
echo "    Sum of sphere charges for each mode 10 calculation :" `grep 'Sum of sphere charges' ?-job10 ?-sh-job10  ?-nc-job10 | awk '{print $NF}'`  '  ' fluctuation $tolc
set tol = `echo $tolj $tolc $tolq | mcx . -csum -w:nohead .`
if (`echo $tol 0 | awk -v tol=.000001 '{{k=($1-$2)>0?($1-$2):($2-$1);} print (k<=tol)}'`) then
  echo "   " Basic GF test mode 10 for multiple screening transformations PASSED
else
  set failed = ($failed $n)
  echo "   " Basic GF test mode 10 for multiple screening transformations FAILED
endif
echo

@ n = $n + 1
echo "... test $n (collinear) GF+SO,  f not downfolded, with SOC scaled to 0, mode 10 for gam = 0 2 5"
echo '    This test must be run after setup from prior test'
touch 0-so0-job10
echo "   " rm -f mixm.fept eula.fept vshft.fept save.fept ?-so0-job10
           rm -f mixm.fept eula.fept vshft.fept save.fept ?-so0-job10
echo "   " cp $topdir/gf/test/socscl.fept .
           cp $topdir/gf/test/socscl.fept .
echo '    do for gam 0 2 5 : lmgf fept -vgamma=$gam -vso=1 -vrel=1 -vgfmod=10 -vnk=8 -vnc=1 -vntht=0 -vnit=20 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --quit=rho > $gam-so0-job10'
foreach gam (0 2 5)
lmgf fept -vgamma=$gam -vso=1 -vrel=1 -vgfmod=10 -vnk=8 -vnc=1 -vntht=0 -vnit=20 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --quit=rho > $gam-so0-job10
echo checksum FePt jr.fept `mcx -r:open jr.fept jr.fept -rsum -csum -w:nohead .` >> $gam-so0-job10
end

set tolj = `grep -A 1 '2/3 J' ?-job10 ?-so0-job10 | grep job10- | awk '{print $NF}' | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt((x1-avg+1e-9)^2/nr)' -rsum -w:nohead .`
echo "    2/3 J(Fe) for ?-job10 ?-so0-job10 :" `grep -A 1 '2/3 J' ?-job10 ?-so0-job10 | grep job10- | awk '{print $NF}'`  '  ' fluctuation $tolj
set tolc = `grep checksum ?-job10 ?-so0-job10 | awk '{print $NF}' | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt((x1-avg+1e-9)^2/nr)' -rsum -w:nohead .`
echo "    checksum Ft-Pt J ?-job10 ?-so0-job10 :" `grep checksum ?-job10 ?-so0-job10 | awk '{print $NF}'`  '  ' fluctuation $tolc
set tolq = `grep 'Sum of sphere charges' ?-job10 ?-so0-job10 | awk '{print $NF}' | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt((x1-avg+1e-9)^2/nr)' -rsum -w:nohead .`
echo "    Sum of sphere charges for ?-job10 ?-so0-job10 :" `grep 'Sum of sphere charges' ?-job10 ?-so0-job10 | awk '{print $NF}'`  '  ' fluctuation $tolc
set tol = `echo $tolj $tolc $tolq | mcx . -csum -w:nohead .`
if (`echo $tol 0 | awk -v tol=.000001 '{{k=($1-$2)>0?($1-$2):($2-$1);} print (k<=tol)}'`) then
  echo "   " Basic GF+SO test mode 10, SO scaled to 0 PASSED
else
  set failed = ($failed $n)
  echo "   " Basic GF+SO test mode 10, SO scaled to 0 FAILED
endif
echo

@ n = $n + 1
echo "... test $n (collinear) GF+SO mode 10, gam = 0 2 5"
echo '    This test must be run after setup from prior test'
touch 0-so-job10
echo "   " rm -f mixm.fept eula.fept vshft.fept save.fept socscl.fept ?-so-job10
           rm -f mixm.fept eula.fept vshft.fept save.fept socscl.fept ?-so-job10
echo '    echo  ef=-0.0716711  vconst=-0.0033760 > vshft.fept'
          echo  ef=-0.0716711  vconst=-0.0033760 > vshft.fept
echo '    do for gam 0 2 5 : lmgf fept -vgamma=$gam -vso=1 -vrel=1 -vgfmod=10 -vnk=8 -vnc=1 -vntht=0 -vnit=20 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --quit=rho > $gam-so-job10'
foreach gam (0 2 5)
lmgf fept -vgamma=$gam -vso=1 -vrel=1 -vgfmod=10 -vnk=8 -vnc=1 -vntht=0 -vnit=20 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --quit=rho --vshft > $gam-so-job10
echo checksum FePt jr.fept `mcx -r:open jr.fept jr.fept -rsum -csum -w:nohead .` >> $gam-so-job10
end

set tolj = `grep -A 1 '2/3 J' ?-so-job10 | grep job10- | awk '{print $NF}' | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt((x1-avg+1e-9)^2/nr)' -rsum -w:nohead .`
echo "    2/3 J(Fe) for ?-so-job10 :" `grep -A 1 '2/3 J' ?-so-job10 | grep job10- | awk '{print $NF}'`  '  ' fluctuation $tolj
set tolc = `grep checksum ?-so-job10 | awk '{print $NF}' | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt((x1-avg+1e-9)^2/nr)' -rsum -w:nohead .`
echo "    checksum Ft-Pt J ?-so-job10 :" `grep checksum ?-so-job10 | awk '{print $NF}'`  '  ' fluctuation $tolc
set tolq = `grep 'Sum of sphere charges' ?-so-job10 | awk '{print $NF}' | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt((x1-avg+1e-9)^2/nr)' -rsum -w:nohead .`
echo "    Sum of sphere charges for ?-so-job10 :" `grep 'Sum of sphere charges' ?-so-job10 | awk '{print $NF}'`  '  ' fluctuation $tolc
set tol = `echo $tolj $tolc $tolq | mcx . -csum -w:nohead .`
if (`echo $tol 0 | awk -vtol=10.0 '{{k=($1-$2)>0?($1-$2):($2-$1);} print (k<=tol)}'` == 1) then
  echo "   " 'Basic GF+SO test mode 10, tol < 10.0  PASSED'
else
  set failed = ($failed $n)
  echo "   " 'Basic GF+SO test mode 10, tol < 10.0  FAILED'
endif
echo

@ n = $n + 1
echo "... test $n (collinear) fully relativistic GF mode 10, gam = 0 2 5"
touch  0-fr-job10
rm     ?-fr-job10
echo '    Add potential shift Set up FR potential parameters'
echo {fe,pt}.fept | xargs sed -i 's:MOMREL:.MOMREL:'
echo "   " rm -f mixm.fept eula.fept vshft.fept save.fept socscl.fept
           rm -f mixm.fept eula.fept vshft.fept save.fept socscl.fept
echo '    lmgf fept -vrel=2 -vnk=8 -vnc=1 -vidxf=1 -vntht=0 -vnit=0 --pr31,30 -vbegmom=2 >out.lmgf '
          lmgf fept -vrel=2 -vso=1 -vnk=8 -vnc=1 -vidxf=1 -vntht=0 -vnit=0 --pr31,30 -vbegmom=2 > out.lmgf
echo '    echo  ef=-0.0716711  vconst=-0.0018378 > vshft.fept'
          echo  ef=-0.0716711  vconst=-0.0018378 > vshft.fept
echo '    do for gam 0 2 5 : lmgf fept -vgamma=$gam -vso=0 -vrel=2 -vgfmod=10 -vnk=8 -vnc=1 -vntht=0 -vnit=20 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --vshft > $gam-fr-job10'
foreach gam (0 2 5)
lmgf fept -vgamma=$gam -vso=0 -vrel=2 -vgfmod=10 -vnk=8 -vnc=1 -vntht=0 -vnit=20 --pr31,30 -vidxf=1 --iactiv=no -ef=-0.0716711 --vshft > $gam-fr-job10
echo checksum FePt jr.fept `mcx -r:open jr.fept jr.fept -rsum -csum -w:nohead .` >> $gam-fr-job10
end

set tolj = `grep -A 1 '2/3 J' ?-fr-job10 | grep job10- | awk '{print $NF}' | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt((x1-avg+1e-9)^2/nr)' -rsum -w:nohead .`
echo "    2/3 J(Fe) for ?-fr-job10 :" `grep -A 1 '2/3 J' ?-fr-job10 | grep job10- | awk '{print $NF}'`  '  ' fluctuation $tolj
set tolc = `grep checksum ?-fr-job10 | awk '{print $NF}' | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt((x1-avg+1e-9)^2/nr)' -rsum -w:nohead .`
echo "    checksum Ft-Pt J ?-fr-job10 :" `grep checksum ?-fr-job10 | awk '{print $NF}'`  '  ' fluctuation $tolc
set tolq = `grep 'Sum of sphere charges' ?-fr-job10 | awk '{print $NF}' | mcx . -p -s1/nr -rsum -av avg -pop -e1 'sqrt((x1-avg+1e-9)^2/nr)' -rsum -w:nohead .`
echo "    Sum of sphere charges for ?-fr-job10 :" `grep 'Sum of sphere charges' ?-fr-job10 | awk '{print $NF}'`  '  ' fluctuation $tolc
set tol = `echo $tolj $tolc $tolq | mcx . -csum -w:nohead .`
if (`echo $tol 0 | awk -vtol=10.0 '{{k=($1-$2)>0?($1-$2):($2-$1);} print (k<=tol)}'` == 1) then
  echo "   " 'Basic fully relativistic GF test mode 10, tol < 10.0  PASSED'
else
  set failed = ($failed $n
  echo "   " 'Basic fully relativistic GF test mode 10, tol < 10.0  FAILED'
endif
echo

if ($#failed <= 1) then
  echo "    all nc GF tests PASSED"
else
  shift failed
  echo "    the following nc GF tests FAILED:  $failed"
endif
echo
