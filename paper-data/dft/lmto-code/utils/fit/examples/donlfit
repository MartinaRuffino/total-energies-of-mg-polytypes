nlfit a1=1 a2=1.7 "a1*cos(a2*x1)" a1,a2 nlfit.1
echo the following two should perform identically the same fit:
nlfit -g10 -b=.5 a1=1 a2=1.7 a3=1 "a1+a3*cos(2*a2*x1)" a1,a2,a3 nlfit.3
nlfit -g10 -y='x2*x2' -g10 -b=.5 a1=1 a2=1.7 a3=1 "a1+a3*cos(2*a2*x1)" a1,a2,a3 nlfit.1
nlfit -b=.1 c1=1 s1=1 w1=2.1 c2=1 s2=1 -sub "w2=2*w1" "c1*cos(w1*x)+s1*sin(w1*x)"+"c2*cos(w2*x)+s2*sin(w2*x)" c1,s1,w1,c2,s2 nlfit.2
# echo this fits the error function to a ratio of polynomials in the region 0..1.2.  NB: need r16 precision
# gausq 60 0 1.2 | mc-16 -f3f30.25 . -e3 x1 'erfc(x1)' x2 > dat.erfc
# cat >erfc0 <<END
# y0=1/sqrt(4*pi)
# t00=3.5449077018110320546
# t01=4.7620939924651612669
# t02=3.2736517696909315089
# t03=1.3370733967672200514
# t04=0.3379483486068736970
# t05=0.0495097025414713913
# t06=0.0032856284935104874
# b01=2.4717410803076082425
# b02=2.7125412557844385188
# b03=1.7184681821170792768
# b04=0.6812500035872723875
# b05=0.1697538250352543577
# b06=0.0247583422273647585
# b07=0.0016426659918652294
# END
# xnlfit -pr40 -g16 -w -y='(x2*exp(x1*x1)-0)/y0' -ierfc0 -sub t00=1/y0 -sub 'b01=(t01+4)/t00' '((((((t06*x+t05)*x+t04)*x+t03)*x+t02)*x+t01)*x+t00)/(((((((b07*x+b06)*x+b05)*x+b04)*x+b03)*x+b02)*x+b01)*x+1)' t01,t02,t03,t04,t05,t06,b02,b03,b04,b05,b06,b07 dat.erfc

# echo ... The following fits the error function from x=1.2 to infinity
# gausq -m=10 80 1.2 .9 | mc-16 -'f(f30.25,g30.20,g30.20)' . -e3 x1 'erfc(x1)' x2'*exp(6*x1-10))' > dat.erfc1
# gausq -m=10 80 1.2 .9 | mc-16 -'f(f30.25,g30.20,g30.20)' . -e3 x1 'erfc(x1)' x2'*sqrt(exp(x1*x1))' > dat.erfc1
# cat >erfc1 <<END
# y0=1/sqrt(4*pi)
# t10=3.54610087294100957759
# t11=1447.89716278004672463
# t12=2118.73372805594105099
# t13=1511.84944010435387429
# t14=626.146497357333841450
# t15=150.499918858411448822
# t16=17.5656975948735164722
# b11=409.575949311357645685
# b12=1058.82495111270087468
# b13=1212.46529527165938847
# b14=793.426392342902669187
# b15=317.475884697060174197
# b16=75.2493180258648938763
# b17=8.78286618683841345487
# END
# xnlfit -b=.01 -g20 -w -ierfc1 '((((((t16*x+t15)*x+t14)*x+t13)*x+t12)*x+t11)*x+t10)/(((((((b17*x+b16)*x+b15)*x+b14)*x+b13)*x+b12)*x+b11)*x+1)*exp(-x*x)*y0' t10,t11,t12,t13,t14,t15,t16,b11,b12,b13,b14,b15,b16,b17 dat.erfc1
