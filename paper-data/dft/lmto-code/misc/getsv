#!/bin/tcsh
# ------------- extracts parms from last lines from save file, writes to dat ---

  if ($#argv >= 1) goto defaults
message:
  echo  'usage: getsv [-switch ...] varnams ext'
  echo  '       Writes from file "save.ext" varnams + ehf to file "dat"'
  echo  '       stdin is used instead of file "save.ext"'
  echo  '       -kstrn  use strn for key instead of c'
  echo  '       -sstrn  match only lines containing strn'
  echo  '       -sort   sorts the data by the first column before saving'
  echo  '       -h=#    extract # lines from top'
  echo  '       -t=#    extract # lines from bottom'
  echo  '       -n      Count rows and columns; Make 1st line % rows # cols #'
  echo  '       -q      quiet mode'
  echo  '       -v      verbose mode'
  exit -1

# --- Defaults ---
defaults:
  set key = c  cmd = 'cat'  
  set grep = egrep
# ... if gnu egrep available:
  set grep = "egrep -E"
  set extract
  set sort = cat

# --- Pick off switches ---
options:
#echo parsing $1
# --- Switches -.. ---
#    set arg2=` echo "$1" | sed -e 's/\(...\).*/\1/' `
  switch ("$1")
    case "-h=*"
      set cmd = ` echo "$1" | awk '{print "head -" substr($0,4,50)}' `
      shift; goto options
    case "-t=*"
      set cmd = ` echo "$1" | awk '{print "tail -" substr($0,4,50)}' `
      shift; goto options
    case "-sort"
      set sort = "sort -n"
      shift; goto options
    case "-n"
      set printrows; shift; goto options
    case "-k*"
      set key = ` echo "$1" | awk '{print  substr($0,3,50)}' `
      shift; goto options
    case "-s*"
      set key2 = ` echo "$1" | awk '{print  substr($0,3,50)}' `
      shift; goto options
    case "-q"
      set quiet; shift; goto options
    case "-v"
      set vbse; shift; goto options
  endsw

# --- All arguments except the last are parameters to extract ---  
  while ($#argv > 1)
     set extract = ( $extract "$1" )
    shift
  end

# --- File name ---
  set fnam = save."$1"
  if ("$1" == ".") set fnam

# --- grep regex ---
  set regex = "^$key"
  if ($?key2) then
    set regex = "^$key.*$key2"
  endif
 
# --- Extract the variables ---
if ($?vbse) then
  if ("$1" != ".") then
    echo getsv: "$grep" "$regex" "$fnam | $cmd | $sort" ...
    $grep "$regex" $fnam | $cmd | $sort
  endif
  echo getsv: $grep "$regex" "$fnam | $cmd | vextract . $extract ehf | $sort >dat"
endif
$grep "$regex" $fnam | $cmd | vextract . $extract ehf | $sort >dat

if ($?printrows) then
  set cols = `head -1 dat | wc | awk '{print $2}'`
  set rows = `wc dat | awk '{print $1}'`
  echo "% rows $rows cols $cols" >dat
  $grep "$regex" $fnam | $cmd | vextract . $extract ehf | $sort >>dat
endif
if ($?quiet) exit
alias mc mc
unalias mc
mc dat
 
