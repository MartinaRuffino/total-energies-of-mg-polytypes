# Uniform mesh of qp on 3D grid.
# For a 2D grid, use n3=1
# Define grid axes by these three quantities:
# 1. qlat1 qlat2 qlat3
# 2. number of divisions on each axis
# 3. range for each axis (x1,x2) (y1,y2) (z1,z2)
# % vec qlat1[3]  1   0   0
# % vec qlat2[3]  0   1   0
# % vec qlat3[3]  0   0   1/1.793323/2
% vec qlat1[3]  0.5 0.5 0
% vec qlat2[3] -0.5 0.5 0.0
% vec qlat3[3]  0   0   1/1.793323/2
% const n1=3 n2=3 n3=2
% const x1=-1 x2=1 y1=-1 y2=1 z1=0 z2=1
#
# %echo qlat1 = {qlat1}    range = ({x1},{x2})
# %echo qlat2 = {qlat2}    range = ({y1},{y2})
# %echo qlat3 = {qlat3}    range = ({z1},{z2})
# % rows {n1}*{n2}*{n3} cols 3

# ... Start of outer loop
% var dz = (z2-z1)/((n3<2?2:n3)-1) z=z1
% repeat i3=1:n3
# Start of middle loop
% var dy = (y2-y1)/(n2-1) y=y1
% repeat i2=1:n2
# Start of inner loop
% var dx = (x2-x1)/(n1-1) x=x1
% repeat i1=1:n1
% var qpx = x*qlat1(1)+y*qlat2(1)+z*qlat3(1)
% var qpy = x*qlat1(2)+y*qlat2(2)+z*qlat3(2)
% var qpz = x*qlat1(3)+y*qlat2(3)+z*qlat3(3)
  {qpx}  {qpy}  {qpz}
% var x += dx
% end
% var y += dy
% end
% var z += dz
% end
